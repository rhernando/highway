/*
* generated by Xtext
*/

package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XHighwayGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class HighwayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Highway");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHighwayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHighwayKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInitNodesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cInitNodesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cInitNodesNodeParserRuleCall_3_2_0 = (RuleCall)cInitNodesAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cInitNodesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cInitNodesNodeParserRuleCall_3_3_1_0 = (RuleCall)cInitNodesAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInitCarsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInitCarsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInitCarsCarParserRuleCall_4_2_0 = (RuleCall)cInitCarsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInitCarsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInitCarsCarParserRuleCall_4_3_1_0 = (RuleCall)cInitCarsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInitSegmentsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInitSegmentsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cInitSegmentsSegmentParserRuleCall_5_2_0 = (RuleCall)cInitSegmentsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInitSegmentsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cInitSegmentsSegmentParserRuleCall_5_3_1_0 = (RuleCall)cInitSegmentsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cInitSemaphoreKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cInitSemaphoreAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cInitSemaphoreSemaphoreParserRuleCall_6_2_0 = (RuleCall)cInitSemaphoreAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cInitSemaphoreAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cInitSemaphoreSemaphoreParserRuleCall_6_3_1_0 = (RuleCall)cInitSemaphoreAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInitSignalKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cInitSignalAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cInitSignalSignalParserRuleCall_7_2_0 = (RuleCall)cInitSignalAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cInitSignalAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cInitSignalSignalParserRuleCall_7_3_1_0 = (RuleCall)cInitSignalAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Highway:
		//
		//	{Highway} "Highway" "{" ("initNodes" "{" initNodes+=Node ("," initNodes+=Node)* "}")? ("initCars" "{" initCars+=Car
		//
		//	("," initCars+=Car)* "}")? ("initSegments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")?
		//
		//	("initSemaphore" "{" initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")? ("initSignal" "{"
		//
		//	initSignal+=Signal ("," initSignal+=Signal)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{Highway} "Highway" "{" ("initNodes" "{" initNodes+=Node ("," initNodes+=Node)* "}")? ("initCars" "{" initCars+=Car (","
		//
		//initCars+=Car)* "}")? ("initSegments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")? ("initSemaphore"
		//
		//"{" initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")? ("initSignal" "{" initSignal+=Signal (","
		//
		//initSignal+=Signal)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{Highway}
		public Action getHighwayAction_0() { return cHighwayAction_0; }

		//"Highway"
		public Keyword getHighwayKeyword_1() { return cHighwayKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("initNodes" "{" initNodes+=Node ("," initNodes+=Node)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"initNodes"
		public Keyword getInitNodesKeyword_3_0() { return cInitNodesKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//initNodes+=Node
		public Assignment getInitNodesAssignment_3_2() { return cInitNodesAssignment_3_2; }

		//Node
		public RuleCall getInitNodesNodeParserRuleCall_3_2_0() { return cInitNodesNodeParserRuleCall_3_2_0; }

		//("," initNodes+=Node)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//initNodes+=Node
		public Assignment getInitNodesAssignment_3_3_1() { return cInitNodesAssignment_3_3_1; }

		//Node
		public RuleCall getInitNodesNodeParserRuleCall_3_3_1_0() { return cInitNodesNodeParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("initCars" "{" initCars+=Car ("," initCars+=Car)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"initCars"
		public Keyword getInitCarsKeyword_4_0() { return cInitCarsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//initCars+=Car
		public Assignment getInitCarsAssignment_4_2() { return cInitCarsAssignment_4_2; }

		//Car
		public RuleCall getInitCarsCarParserRuleCall_4_2_0() { return cInitCarsCarParserRuleCall_4_2_0; }

		//("," initCars+=Car)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//initCars+=Car
		public Assignment getInitCarsAssignment_4_3_1() { return cInitCarsAssignment_4_3_1; }

		//Car
		public RuleCall getInitCarsCarParserRuleCall_4_3_1_0() { return cInitCarsCarParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//("initSegments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"initSegments"
		public Keyword getInitSegmentsKeyword_5_0() { return cInitSegmentsKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//initSegments+=Segment
		public Assignment getInitSegmentsAssignment_5_2() { return cInitSegmentsAssignment_5_2; }

		//Segment
		public RuleCall getInitSegmentsSegmentParserRuleCall_5_2_0() { return cInitSegmentsSegmentParserRuleCall_5_2_0; }

		//("," initSegments+=Segment)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//initSegments+=Segment
		public Assignment getInitSegmentsAssignment_5_3_1() { return cInitSegmentsAssignment_5_3_1; }

		//Segment
		public RuleCall getInitSegmentsSegmentParserRuleCall_5_3_1_0() { return cInitSegmentsSegmentParserRuleCall_5_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }

		//("initSemaphore" "{" initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"initSemaphore"
		public Keyword getInitSemaphoreKeyword_6_0() { return cInitSemaphoreKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//initSemaphore+=Semaphore
		public Assignment getInitSemaphoreAssignment_6_2() { return cInitSemaphoreAssignment_6_2; }

		//Semaphore
		public RuleCall getInitSemaphoreSemaphoreParserRuleCall_6_2_0() { return cInitSemaphoreSemaphoreParserRuleCall_6_2_0; }

		//("," initSemaphore+=Semaphore)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//initSemaphore+=Semaphore
		public Assignment getInitSemaphoreAssignment_6_3_1() { return cInitSemaphoreAssignment_6_3_1; }

		//Semaphore
		public RuleCall getInitSemaphoreSemaphoreParserRuleCall_6_3_1_0() { return cInitSemaphoreSemaphoreParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//("initSignal" "{" initSignal+=Signal ("," initSignal+=Signal)* "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"initSignal"
		public Keyword getInitSignalKeyword_7_0() { return cInitSignalKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//initSignal+=Signal
		public Assignment getInitSignalAssignment_7_2() { return cInitSignalAssignment_7_2; }

		//Signal
		public RuleCall getInitSignalSignalParserRuleCall_7_2_0() { return cInitSignalSignalParserRuleCall_7_2_0; }

		//("," initSignal+=Signal)*
		public Group getGroup_7_3() { return cGroup_7_3; }

		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }

		//initSignal+=Signal
		public Assignment getInitSignalAssignment_7_3_1() { return cInitSignalAssignment_7_3_1; }

		//Signal
		public RuleCall getInitSignalSignalParserRuleCall_7_3_1_0() { return cInitSignalSignalParserRuleCall_7_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Node");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNode_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExtractorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInjectorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Node:
		//
		//	Node_Impl | Extractor | Injector;
		public ParserRule getRule() { return rule; }

		//Node_Impl | Extractor | Injector
		public Alternatives getAlternatives() { return cAlternatives; }

		//Node_Impl
		public RuleCall getNode_ImplParserRuleCall_0() { return cNode_ImplParserRuleCall_0; }

		//Extractor
		public RuleCall getExtractorParserRuleCall_1() { return cExtractorParserRuleCall_1; }

		//Injector
		public RuleCall getInjectorParserRuleCall_2() { return cInjectorParserRuleCall_2; }
	}

	public class SignalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Signal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSignal_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSpeedlimitParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStopParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cYieldParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Signal:
		//
		//	Signal_Impl | Speedlimit | Stop | Yield;
		public ParserRule getRule() { return rule; }

		//Signal_Impl | Speedlimit | Stop | Yield
		public Alternatives getAlternatives() { return cAlternatives; }

		//Signal_Impl
		public RuleCall getSignal_ImplParserRuleCall_0() { return cSignal_ImplParserRuleCall_0; }

		//Speedlimit
		public RuleCall getSpeedlimitParserRuleCall_1() { return cSpeedlimitParserRuleCall_1; }

		//Stop
		public RuleCall getStopParserRuleCall_2() { return cStopParserRuleCall_2; }

		//Yield
		public RuleCall getYieldParserRuleCall_3() { return cYieldParserRuleCall_3; }
	}

	public class Node_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Node_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cHasStartsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cHasStartsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cHasStartsSegmentCrossReference_5_0 = (CrossReference)cHasStartsAssignment_5.eContents().get(0);
		private final RuleCall cHasStartsSegmentEStringParserRuleCall_5_0_1 = (RuleCall)cHasStartsSegmentCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cHasStartsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cHasStartsSegmentCrossReference_6_1_0 = (CrossReference)cHasStartsAssignment_6_1.eContents().get(0);
		private final RuleCall cHasStartsSegmentEStringParserRuleCall_6_1_0_1 = (RuleCall)cHasStartsSegmentCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cHasEndsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cHasEndsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cHasEndsSegmentCrossReference_10_0 = (CrossReference)cHasEndsAssignment_10.eContents().get(0);
		private final RuleCall cHasEndsSegmentEStringParserRuleCall_10_0_1 = (RuleCall)cHasEndsSegmentCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cHasEndsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cHasEndsSegmentCrossReference_11_1_0 = (CrossReference)cHasEndsAssignment_11_1.eContents().get(0);
		private final RuleCall cHasEndsSegmentEStringParserRuleCall_11_1_0_1 = (RuleCall)cHasEndsSegmentCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cSemaphoreKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cSemaphoreAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final CrossReference cSemaphoreSemaphoreCrossReference_13_1_0 = (CrossReference)cSemaphoreAssignment_13_1.eContents().get(0);
		private final RuleCall cSemaphoreSemaphoreEStringParserRuleCall_13_1_0_1 = (RuleCall)cSemaphoreSemaphoreCrossReference_13_1_0.eContents().get(1);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cSignalsKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cSignalsAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final CrossReference cSignalsSignalCrossReference_14_2_0 = (CrossReference)cSignalsAssignment_14_2.eContents().get(0);
		private final RuleCall cSignalsSignalEStringParserRuleCall_14_2_0_1 = (RuleCall)cSignalsSignalCrossReference_14_2_0.eContents().get(1);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final Keyword cCommaKeyword_14_3_0 = (Keyword)cGroup_14_3.eContents().get(0);
		private final Assignment cSignalsAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final CrossReference cSignalsSignalCrossReference_14_3_1_0 = (CrossReference)cSignalsAssignment_14_3_1.eContents().get(0);
		private final RuleCall cSignalsSignalEStringParserRuleCall_14_3_1_0_1 = (RuleCall)cSignalsSignalCrossReference_14_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Node_Impl returns Node:
		//
		//	{Node} "Node" "{" "hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")" "hasEnds" "("
		//
		//	hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore" semaphore=[Semaphore|EString])?
		//
		//	("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{Node} "Node" "{" "hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")" "hasEnds" "("
		//
		//hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore" semaphore=[Semaphore|EString])?
		//
		//("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{Node}
		public Action getNodeAction_0() { return cNodeAction_0; }

		//"Node"
		public Keyword getNodeKeyword_1() { return cNodeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"hasStarts"
		public Keyword getHasStartsKeyword_3() { return cHasStartsKeyword_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//hasStarts+=[Segment|EString]
		public Assignment getHasStartsAssignment_5() { return cHasStartsAssignment_5; }

		//[Segment|EString]
		public CrossReference getHasStartsSegmentCrossReference_5_0() { return cHasStartsSegmentCrossReference_5_0; }

		//EString
		public RuleCall getHasStartsSegmentEStringParserRuleCall_5_0_1() { return cHasStartsSegmentEStringParserRuleCall_5_0_1; }

		//("," hasStarts+=[Segment|EString])*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//hasStarts+=[Segment|EString]
		public Assignment getHasStartsAssignment_6_1() { return cHasStartsAssignment_6_1; }

		//[Segment|EString]
		public CrossReference getHasStartsSegmentCrossReference_6_1_0() { return cHasStartsSegmentCrossReference_6_1_0; }

		//EString
		public RuleCall getHasStartsSegmentEStringParserRuleCall_6_1_0_1() { return cHasStartsSegmentEStringParserRuleCall_6_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//"hasEnds"
		public Keyword getHasEndsKeyword_8() { return cHasEndsKeyword_8; }

		//"("
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }

		//hasEnds+=[Segment|EString]
		public Assignment getHasEndsAssignment_10() { return cHasEndsAssignment_10; }

		//[Segment|EString]
		public CrossReference getHasEndsSegmentCrossReference_10_0() { return cHasEndsSegmentCrossReference_10_0; }

		//EString
		public RuleCall getHasEndsSegmentEStringParserRuleCall_10_0_1() { return cHasEndsSegmentEStringParserRuleCall_10_0_1; }

		//("," hasEnds+=[Segment|EString])*
		public Group getGroup_11() { return cGroup_11; }

		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }

		//hasEnds+=[Segment|EString]
		public Assignment getHasEndsAssignment_11_1() { return cHasEndsAssignment_11_1; }

		//[Segment|EString]
		public CrossReference getHasEndsSegmentCrossReference_11_1_0() { return cHasEndsSegmentCrossReference_11_1_0; }

		//EString
		public RuleCall getHasEndsSegmentEStringParserRuleCall_11_1_0_1() { return cHasEndsSegmentEStringParserRuleCall_11_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_12() { return cRightParenthesisKeyword_12; }

		//("semaphore" semaphore=[Semaphore|EString])?
		public Group getGroup_13() { return cGroup_13; }

		//"semaphore"
		public Keyword getSemaphoreKeyword_13_0() { return cSemaphoreKeyword_13_0; }

		//semaphore=[Semaphore|EString]
		public Assignment getSemaphoreAssignment_13_1() { return cSemaphoreAssignment_13_1; }

		//[Semaphore|EString]
		public CrossReference getSemaphoreSemaphoreCrossReference_13_1_0() { return cSemaphoreSemaphoreCrossReference_13_1_0; }

		//EString
		public RuleCall getSemaphoreSemaphoreEStringParserRuleCall_13_1_0_1() { return cSemaphoreSemaphoreEStringParserRuleCall_13_1_0_1; }

		//("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")?
		public Group getGroup_14() { return cGroup_14; }

		//"signals"
		public Keyword getSignalsKeyword_14_0() { return cSignalsKeyword_14_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_14_1() { return cLeftParenthesisKeyword_14_1; }

		//signals+=[Signal|EString]
		public Assignment getSignalsAssignment_14_2() { return cSignalsAssignment_14_2; }

		//[Signal|EString]
		public CrossReference getSignalsSignalCrossReference_14_2_0() { return cSignalsSignalCrossReference_14_2_0; }

		//EString
		public RuleCall getSignalsSignalEStringParserRuleCall_14_2_0_1() { return cSignalsSignalEStringParserRuleCall_14_2_0_1; }

		//("," signals+=[Signal|EString])*
		public Group getGroup_14_3() { return cGroup_14_3; }

		//","
		public Keyword getCommaKeyword_14_3_0() { return cCommaKeyword_14_3_0; }

		//signals+=[Signal|EString]
		public Assignment getSignalsAssignment_14_3_1() { return cSignalsAssignment_14_3_1; }

		//[Signal|EString]
		public CrossReference getSignalsSignalCrossReference_14_3_1_0() { return cSignalsSignalCrossReference_14_3_1_0; }

		//EString
		public RuleCall getSignalsSignalEStringParserRuleCall_14_3_1_0_1() { return cSignalsSignalEStringParserRuleCall_14_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_14_4() { return cRightParenthesisKeyword_14_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class CarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Car");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCarAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTimeInKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTimeInAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTimeInEDateParserRuleCall_3_1_0 = (RuleCall)cTimeInAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTimeOutKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTimeOutAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTimeOutEDateParserRuleCall_4_1_0 = (RuleCall)cTimeOutAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIsInSegmentKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIsInSegmentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cIsInSegmentSegmentCrossReference_5_1_0 = (CrossReference)cIsInSegmentAssignment_5_1.eContents().get(0);
		private final RuleCall cIsInSegmentSegmentEStringParserRuleCall_5_1_0_1 = (RuleCall)cIsInSegmentSegmentCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Car:
		//
		//	{Car} "Car" "{" ("timeIn" timeIn=EDate)? ("timeOut" timeOut=EDate)? ("isInSegment" isInSegment=[Segment|EString])?
		//
		//	"}";
		public ParserRule getRule() { return rule; }

		//{Car} "Car" "{" ("timeIn" timeIn=EDate)? ("timeOut" timeOut=EDate)? ("isInSegment" isInSegment=[Segment|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{Car}
		public Action getCarAction_0() { return cCarAction_0; }

		//"Car"
		public Keyword getCarKeyword_1() { return cCarKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("timeIn" timeIn=EDate)?
		public Group getGroup_3() { return cGroup_3; }

		//"timeIn"
		public Keyword getTimeInKeyword_3_0() { return cTimeInKeyword_3_0; }

		//timeIn=EDate
		public Assignment getTimeInAssignment_3_1() { return cTimeInAssignment_3_1; }

		//EDate
		public RuleCall getTimeInEDateParserRuleCall_3_1_0() { return cTimeInEDateParserRuleCall_3_1_0; }

		//("timeOut" timeOut=EDate)?
		public Group getGroup_4() { return cGroup_4; }

		//"timeOut"
		public Keyword getTimeOutKeyword_4_0() { return cTimeOutKeyword_4_0; }

		//timeOut=EDate
		public Assignment getTimeOutAssignment_4_1() { return cTimeOutAssignment_4_1; }

		//EDate
		public RuleCall getTimeOutEDateParserRuleCall_4_1_0() { return cTimeOutEDateParserRuleCall_4_1_0; }

		//("isInSegment" isInSegment=[Segment|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"isInSegment"
		public Keyword getIsInSegmentKeyword_5_0() { return cIsInSegmentKeyword_5_0; }

		//isInSegment=[Segment|EString]
		public Assignment getIsInSegmentAssignment_5_1() { return cIsInSegmentAssignment_5_1; }

		//[Segment|EString]
		public CrossReference getIsInSegmentSegmentCrossReference_5_1_0() { return cIsInSegmentSegmentCrossReference_5_1_0; }

		//EString
		public RuleCall getIsInSegmentSegmentEStringParserRuleCall_5_1_0_1() { return cIsInSegmentSegmentEStringParserRuleCall_5_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Segment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSegmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSegmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNumLanesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNumLanesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNumLanesEIntParserRuleCall_3_1_0 = (RuleCall)cNumLanesAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLengthKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLengthAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLengthEIntParserRuleCall_4_1_0 = (RuleCall)cLengthAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHasCarsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cHasCarsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cHasCarsCarCrossReference_5_2_0 = (CrossReference)cHasCarsAssignment_5_2.eContents().get(0);
		private final RuleCall cHasCarsCarEStringParserRuleCall_5_2_0_1 = (RuleCall)cHasCarsCarCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cHasCarsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cHasCarsCarCrossReference_5_3_1_0 = (CrossReference)cHasCarsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cHasCarsCarEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cHasCarsCarCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Segment:
		//
		//	{Segment} "Segment" "{" ("numLanes" numLanes=EInt)? ("length" length=EInt)? ("hasCars" "(" hasCars+=[Car|EString]
		//
		//	("," hasCars+=[Car|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{Segment} "Segment" "{" ("numLanes" numLanes=EInt)? ("length" length=EInt)? ("hasCars" "(" hasCars+=[Car|EString] (","
		//
		//hasCars+=[Car|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{Segment}
		public Action getSegmentAction_0() { return cSegmentAction_0; }

		//"Segment"
		public Keyword getSegmentKeyword_1() { return cSegmentKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("numLanes" numLanes=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"numLanes"
		public Keyword getNumLanesKeyword_3_0() { return cNumLanesKeyword_3_0; }

		//numLanes=EInt
		public Assignment getNumLanesAssignment_3_1() { return cNumLanesAssignment_3_1; }

		//EInt
		public RuleCall getNumLanesEIntParserRuleCall_3_1_0() { return cNumLanesEIntParserRuleCall_3_1_0; }

		//("length" length=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"length"
		public Keyword getLengthKeyword_4_0() { return cLengthKeyword_4_0; }

		//length=EInt
		public Assignment getLengthAssignment_4_1() { return cLengthAssignment_4_1; }

		//EInt
		public RuleCall getLengthEIntParserRuleCall_4_1_0() { return cLengthEIntParserRuleCall_4_1_0; }

		//("hasCars" "(" hasCars+=[Car|EString] ("," hasCars+=[Car|EString])* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"hasCars"
		public Keyword getHasCarsKeyword_5_0() { return cHasCarsKeyword_5_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }

		//hasCars+=[Car|EString]
		public Assignment getHasCarsAssignment_5_2() { return cHasCarsAssignment_5_2; }

		//[Car|EString]
		public CrossReference getHasCarsCarCrossReference_5_2_0() { return cHasCarsCarCrossReference_5_2_0; }

		//EString
		public RuleCall getHasCarsCarEStringParserRuleCall_5_2_0_1() { return cHasCarsCarEStringParserRuleCall_5_2_0_1; }

		//("," hasCars+=[Car|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//hasCars+=[Car|EString]
		public Assignment getHasCarsAssignment_5_3_1() { return cHasCarsAssignment_5_3_1; }

		//[Car|EString]
		public CrossReference getHasCarsCarCrossReference_5_3_1_0() { return cHasCarsCarCrossReference_5_3_1_0; }

		//EString
		public RuleCall getHasCarsCarEStringParserRuleCall_5_3_1_0_1() { return cHasCarsCarEStringParserRuleCall_5_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SemaphoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Semaphore");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSemaphoreKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCanGoKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCanGoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCanGoEBooleanParserRuleCall_2_1_0 = (RuleCall)cCanGoAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSecondsRedKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSecondsRedAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSecondsRedEIntParserRuleCall_3_1_0 = (RuleCall)cSecondsRedAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSecondsGreenKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSecondsGreenAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSecondsGreenEIntParserRuleCall_4_1_0 = (RuleCall)cSecondsGreenAssignment_4_1.eContents().get(0);
		private final Keyword cBelongsToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBelongsToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cBelongsToNodeCrossReference_6_0 = (CrossReference)cBelongsToAssignment_6.eContents().get(0);
		private final RuleCall cBelongsToNodeEStringParserRuleCall_6_0_1 = (RuleCall)cBelongsToNodeCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Semaphore:
		//
		//	"Semaphore" "{" ("canGo" canGo=EBoolean)? ("secondsRed" secondsRed=EInt)? ("secondsGreen" secondsGreen=EInt)?
		//
		//	"belongsTo" belongsTo=[Node|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Semaphore" "{" ("canGo" canGo=EBoolean)? ("secondsRed" secondsRed=EInt)? ("secondsGreen" secondsGreen=EInt)?
		//
		//"belongsTo" belongsTo=[Node|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Semaphore"
		public Keyword getSemaphoreKeyword_0() { return cSemaphoreKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("canGo" canGo=EBoolean)?
		public Group getGroup_2() { return cGroup_2; }

		//"canGo"
		public Keyword getCanGoKeyword_2_0() { return cCanGoKeyword_2_0; }

		//canGo=EBoolean
		public Assignment getCanGoAssignment_2_1() { return cCanGoAssignment_2_1; }

		//EBoolean
		public RuleCall getCanGoEBooleanParserRuleCall_2_1_0() { return cCanGoEBooleanParserRuleCall_2_1_0; }

		//("secondsRed" secondsRed=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"secondsRed"
		public Keyword getSecondsRedKeyword_3_0() { return cSecondsRedKeyword_3_0; }

		//secondsRed=EInt
		public Assignment getSecondsRedAssignment_3_1() { return cSecondsRedAssignment_3_1; }

		//EInt
		public RuleCall getSecondsRedEIntParserRuleCall_3_1_0() { return cSecondsRedEIntParserRuleCall_3_1_0; }

		//("secondsGreen" secondsGreen=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"secondsGreen"
		public Keyword getSecondsGreenKeyword_4_0() { return cSecondsGreenKeyword_4_0; }

		//secondsGreen=EInt
		public Assignment getSecondsGreenAssignment_4_1() { return cSecondsGreenAssignment_4_1; }

		//EInt
		public RuleCall getSecondsGreenEIntParserRuleCall_4_1_0() { return cSecondsGreenEIntParserRuleCall_4_1_0; }

		//"belongsTo"
		public Keyword getBelongsToKeyword_5() { return cBelongsToKeyword_5; }

		//belongsTo=[Node|EString]
		public Assignment getBelongsToAssignment_6() { return cBelongsToAssignment_6; }

		//[Node|EString]
		public CrossReference getBelongsToNodeCrossReference_6_0() { return cBelongsToNodeCrossReference_6_0; }

		//EString
		public RuleCall getBelongsToNodeEStringParserRuleCall_6_0_1() { return cBelongsToNodeEStringParserRuleCall_6_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class Signal_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Signal_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSignalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBelongsToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBelongsToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cBelongsToNodeCrossReference_3_0 = (CrossReference)cBelongsToAssignment_3.eContents().get(0);
		private final RuleCall cBelongsToNodeEStringParserRuleCall_3_0_1 = (RuleCall)cBelongsToNodeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Signal_Impl returns Signal:
		//
		//	"Signal" "{" "belongsTo" belongsTo=[Node|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Signal" "{" "belongsTo" belongsTo=[Node|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Signal"
		public Keyword getSignalKeyword_0() { return cSignalKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"belongsTo"
		public Keyword getBelongsToKeyword_2() { return cBelongsToKeyword_2; }

		//belongsTo=[Node|EString]
		public Assignment getBelongsToAssignment_3() { return cBelongsToAssignment_3; }

		//[Node|EString]
		public CrossReference getBelongsToNodeCrossReference_3_0() { return cBelongsToNodeCrossReference_3_0; }

		//EString
		public RuleCall getBelongsToNodeEStringParserRuleCall_3_0_1() { return cBelongsToNodeEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ExtractorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Extractor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExtractorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExtractorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHasStartsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cHasStartsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cHasStartsSegmentCrossReference_3_2_0 = (CrossReference)cHasStartsAssignment_3_2.eContents().get(0);
		private final RuleCall cHasStartsSegmentEStringParserRuleCall_3_2_0_1 = (RuleCall)cHasStartsSegmentCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cHasStartsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cHasStartsSegmentCrossReference_3_3_1_0 = (CrossReference)cHasStartsAssignment_3_3_1.eContents().get(0);
		private final RuleCall cHasStartsSegmentEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cHasStartsSegmentCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cHasEndsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHasEndsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cHasEndsSegmentCrossReference_6_0 = (CrossReference)cHasEndsAssignment_6.eContents().get(0);
		private final RuleCall cHasEndsSegmentEStringParserRuleCall_6_0_1 = (RuleCall)cHasEndsSegmentCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cHasEndsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cHasEndsSegmentCrossReference_7_1_0 = (CrossReference)cHasEndsAssignment_7_1.eContents().get(0);
		private final RuleCall cHasEndsSegmentEStringParserRuleCall_7_1_0_1 = (RuleCall)cHasEndsSegmentCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cSemaphoreKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cSemaphoreAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cSemaphoreSemaphoreCrossReference_9_1_0 = (CrossReference)cSemaphoreAssignment_9_1.eContents().get(0);
		private final RuleCall cSemaphoreSemaphoreEStringParserRuleCall_9_1_0_1 = (RuleCall)cSemaphoreSemaphoreCrossReference_9_1_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSignalsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cSignalsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final CrossReference cSignalsSignalCrossReference_10_2_0 = (CrossReference)cSignalsAssignment_10_2.eContents().get(0);
		private final RuleCall cSignalsSignalEStringParserRuleCall_10_2_0_1 = (RuleCall)cSignalsSignalCrossReference_10_2_0.eContents().get(1);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cSignalsAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final CrossReference cSignalsSignalCrossReference_10_3_1_0 = (CrossReference)cSignalsAssignment_10_3_1.eContents().get(0);
		private final RuleCall cSignalsSignalEStringParserRuleCall_10_3_1_0_1 = (RuleCall)cSignalsSignalCrossReference_10_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Extractor:
		//
		//	{Extractor} "Extractor" "{" ("hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")")?
		//
		//	"hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore"
		//
		//	semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{Extractor} "Extractor" "{" ("hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")")?
		//
		//"hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore"
		//
		//semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{Extractor}
		public Action getExtractorAction_0() { return cExtractorAction_0; }

		//"Extractor"
		public Keyword getExtractorKeyword_1() { return cExtractorKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"hasStarts"
		public Keyword getHasStartsKeyword_3_0() { return cHasStartsKeyword_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }

		//hasStarts+=[Segment|EString]
		public Assignment getHasStartsAssignment_3_2() { return cHasStartsAssignment_3_2; }

		//[Segment|EString]
		public CrossReference getHasStartsSegmentCrossReference_3_2_0() { return cHasStartsSegmentCrossReference_3_2_0; }

		//EString
		public RuleCall getHasStartsSegmentEStringParserRuleCall_3_2_0_1() { return cHasStartsSegmentEStringParserRuleCall_3_2_0_1; }

		//("," hasStarts+=[Segment|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//hasStarts+=[Segment|EString]
		public Assignment getHasStartsAssignment_3_3_1() { return cHasStartsAssignment_3_3_1; }

		//[Segment|EString]
		public CrossReference getHasStartsSegmentCrossReference_3_3_1_0() { return cHasStartsSegmentCrossReference_3_3_1_0; }

		//EString
		public RuleCall getHasStartsSegmentEStringParserRuleCall_3_3_1_0_1() { return cHasStartsSegmentEStringParserRuleCall_3_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }

		//"hasEnds"
		public Keyword getHasEndsKeyword_4() { return cHasEndsKeyword_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//hasEnds+=[Segment|EString]
		public Assignment getHasEndsAssignment_6() { return cHasEndsAssignment_6; }

		//[Segment|EString]
		public CrossReference getHasEndsSegmentCrossReference_6_0() { return cHasEndsSegmentCrossReference_6_0; }

		//EString
		public RuleCall getHasEndsSegmentEStringParserRuleCall_6_0_1() { return cHasEndsSegmentEStringParserRuleCall_6_0_1; }

		//("," hasEnds+=[Segment|EString])*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//hasEnds+=[Segment|EString]
		public Assignment getHasEndsAssignment_7_1() { return cHasEndsAssignment_7_1; }

		//[Segment|EString]
		public CrossReference getHasEndsSegmentCrossReference_7_1_0() { return cHasEndsSegmentCrossReference_7_1_0; }

		//EString
		public RuleCall getHasEndsSegmentEStringParserRuleCall_7_1_0_1() { return cHasEndsSegmentEStringParserRuleCall_7_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }

		//("semaphore" semaphore=[Semaphore|EString])?
		public Group getGroup_9() { return cGroup_9; }

		//"semaphore"
		public Keyword getSemaphoreKeyword_9_0() { return cSemaphoreKeyword_9_0; }

		//semaphore=[Semaphore|EString]
		public Assignment getSemaphoreAssignment_9_1() { return cSemaphoreAssignment_9_1; }

		//[Semaphore|EString]
		public CrossReference getSemaphoreSemaphoreCrossReference_9_1_0() { return cSemaphoreSemaphoreCrossReference_9_1_0; }

		//EString
		public RuleCall getSemaphoreSemaphoreEStringParserRuleCall_9_1_0_1() { return cSemaphoreSemaphoreEStringParserRuleCall_9_1_0_1; }

		//("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")?
		public Group getGroup_10() { return cGroup_10; }

		//"signals"
		public Keyword getSignalsKeyword_10_0() { return cSignalsKeyword_10_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_10_1() { return cLeftParenthesisKeyword_10_1; }

		//signals+=[Signal|EString]
		public Assignment getSignalsAssignment_10_2() { return cSignalsAssignment_10_2; }

		//[Signal|EString]
		public CrossReference getSignalsSignalCrossReference_10_2_0() { return cSignalsSignalCrossReference_10_2_0; }

		//EString
		public RuleCall getSignalsSignalEStringParserRuleCall_10_2_0_1() { return cSignalsSignalEStringParserRuleCall_10_2_0_1; }

		//("," signals+=[Signal|EString])*
		public Group getGroup_10_3() { return cGroup_10_3; }

		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }

		//signals+=[Signal|EString]
		public Assignment getSignalsAssignment_10_3_1() { return cSignalsAssignment_10_3_1; }

		//[Signal|EString]
		public CrossReference getSignalsSignalCrossReference_10_3_1_0() { return cSignalsSignalCrossReference_10_3_1_0; }

		//EString
		public RuleCall getSignalsSignalEStringParserRuleCall_10_3_1_0_1() { return cSignalsSignalEStringParserRuleCall_10_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_10_4() { return cRightParenthesisKeyword_10_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class InjectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Injector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInjectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInjectorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCarsPerHourKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCarsPerHourAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCarsPerHourEIntParserRuleCall_3_1_0 = (RuleCall)cCarsPerHourAssignment_3_1.eContents().get(0);
		private final Keyword cHasStartsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHasStartsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cHasStartsSegmentCrossReference_6_0 = (CrossReference)cHasStartsAssignment_6.eContents().get(0);
		private final RuleCall cHasStartsSegmentEStringParserRuleCall_6_0_1 = (RuleCall)cHasStartsSegmentCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cHasStartsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cHasStartsSegmentCrossReference_7_1_0 = (CrossReference)cHasStartsAssignment_7_1.eContents().get(0);
		private final RuleCall cHasStartsSegmentEStringParserRuleCall_7_1_0_1 = (RuleCall)cHasStartsSegmentCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cHasEndsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cHasEndsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final CrossReference cHasEndsSegmentCrossReference_9_2_0 = (CrossReference)cHasEndsAssignment_9_2.eContents().get(0);
		private final RuleCall cHasEndsSegmentEStringParserRuleCall_9_2_0_1 = (RuleCall)cHasEndsSegmentCrossReference_9_2_0.eContents().get(1);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cHasEndsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final CrossReference cHasEndsSegmentCrossReference_9_3_1_0 = (CrossReference)cHasEndsAssignment_9_3_1.eContents().get(0);
		private final RuleCall cHasEndsSegmentEStringParserRuleCall_9_3_1_0_1 = (RuleCall)cHasEndsSegmentCrossReference_9_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSemaphoreKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cSemaphoreAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cSemaphoreSemaphoreCrossReference_10_1_0 = (CrossReference)cSemaphoreAssignment_10_1.eContents().get(0);
		private final RuleCall cSemaphoreSemaphoreEStringParserRuleCall_10_1_0_1 = (RuleCall)cSemaphoreSemaphoreCrossReference_10_1_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cSignalsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cSignalsAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final CrossReference cSignalsSignalCrossReference_11_2_0 = (CrossReference)cSignalsAssignment_11_2.eContents().get(0);
		private final RuleCall cSignalsSignalEStringParserRuleCall_11_2_0_1 = (RuleCall)cSignalsSignalCrossReference_11_2_0.eContents().get(1);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cSignalsAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final CrossReference cSignalsSignalCrossReference_11_3_1_0 = (CrossReference)cSignalsAssignment_11_3_1.eContents().get(0);
		private final RuleCall cSignalsSignalEStringParserRuleCall_11_3_1_0_1 = (RuleCall)cSignalsSignalCrossReference_11_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Injector:
		//
		//	{Injector} "Injector" "{" ("carsPerHour" carsPerHour=EInt)? "hasStarts" "(" hasStarts+=[Segment|EString] (","
		//
		//	hasStarts+=[Segment|EString])* ")" ("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")")?
		//
		//	("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] (","
		//
		//	signals+=[Signal|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{Injector} "Injector" "{" ("carsPerHour" carsPerHour=EInt)? "hasStarts" "(" hasStarts+=[Segment|EString] (","
		//
		//hasStarts+=[Segment|EString])* ")" ("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")")?
		//
		//("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])*
		//
		//")")? "}"
		public Group getGroup() { return cGroup; }

		//{Injector}
		public Action getInjectorAction_0() { return cInjectorAction_0; }

		//"Injector"
		public Keyword getInjectorKeyword_1() { return cInjectorKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("carsPerHour" carsPerHour=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"carsPerHour"
		public Keyword getCarsPerHourKeyword_3_0() { return cCarsPerHourKeyword_3_0; }

		//carsPerHour=EInt
		public Assignment getCarsPerHourAssignment_3_1() { return cCarsPerHourAssignment_3_1; }

		//EInt
		public RuleCall getCarsPerHourEIntParserRuleCall_3_1_0() { return cCarsPerHourEIntParserRuleCall_3_1_0; }

		//"hasStarts"
		public Keyword getHasStartsKeyword_4() { return cHasStartsKeyword_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//hasStarts+=[Segment|EString]
		public Assignment getHasStartsAssignment_6() { return cHasStartsAssignment_6; }

		//[Segment|EString]
		public CrossReference getHasStartsSegmentCrossReference_6_0() { return cHasStartsSegmentCrossReference_6_0; }

		//EString
		public RuleCall getHasStartsSegmentEStringParserRuleCall_6_0_1() { return cHasStartsSegmentEStringParserRuleCall_6_0_1; }

		//("," hasStarts+=[Segment|EString])*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//hasStarts+=[Segment|EString]
		public Assignment getHasStartsAssignment_7_1() { return cHasStartsAssignment_7_1; }

		//[Segment|EString]
		public CrossReference getHasStartsSegmentCrossReference_7_1_0() { return cHasStartsSegmentCrossReference_7_1_0; }

		//EString
		public RuleCall getHasStartsSegmentEStringParserRuleCall_7_1_0_1() { return cHasStartsSegmentEStringParserRuleCall_7_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }

		//("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")")?
		public Group getGroup_9() { return cGroup_9; }

		//"hasEnds"
		public Keyword getHasEndsKeyword_9_0() { return cHasEndsKeyword_9_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_9_1() { return cLeftParenthesisKeyword_9_1; }

		//hasEnds+=[Segment|EString]
		public Assignment getHasEndsAssignment_9_2() { return cHasEndsAssignment_9_2; }

		//[Segment|EString]
		public CrossReference getHasEndsSegmentCrossReference_9_2_0() { return cHasEndsSegmentCrossReference_9_2_0; }

		//EString
		public RuleCall getHasEndsSegmentEStringParserRuleCall_9_2_0_1() { return cHasEndsSegmentEStringParserRuleCall_9_2_0_1; }

		//("," hasEnds+=[Segment|EString])*
		public Group getGroup_9_3() { return cGroup_9_3; }

		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }

		//hasEnds+=[Segment|EString]
		public Assignment getHasEndsAssignment_9_3_1() { return cHasEndsAssignment_9_3_1; }

		//[Segment|EString]
		public CrossReference getHasEndsSegmentCrossReference_9_3_1_0() { return cHasEndsSegmentCrossReference_9_3_1_0; }

		//EString
		public RuleCall getHasEndsSegmentEStringParserRuleCall_9_3_1_0_1() { return cHasEndsSegmentEStringParserRuleCall_9_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_9_4() { return cRightParenthesisKeyword_9_4; }

		//("semaphore" semaphore=[Semaphore|EString])?
		public Group getGroup_10() { return cGroup_10; }

		//"semaphore"
		public Keyword getSemaphoreKeyword_10_0() { return cSemaphoreKeyword_10_0; }

		//semaphore=[Semaphore|EString]
		public Assignment getSemaphoreAssignment_10_1() { return cSemaphoreAssignment_10_1; }

		//[Semaphore|EString]
		public CrossReference getSemaphoreSemaphoreCrossReference_10_1_0() { return cSemaphoreSemaphoreCrossReference_10_1_0; }

		//EString
		public RuleCall getSemaphoreSemaphoreEStringParserRuleCall_10_1_0_1() { return cSemaphoreSemaphoreEStringParserRuleCall_10_1_0_1; }

		//("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")?
		public Group getGroup_11() { return cGroup_11; }

		//"signals"
		public Keyword getSignalsKeyword_11_0() { return cSignalsKeyword_11_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_11_1() { return cLeftParenthesisKeyword_11_1; }

		//signals+=[Signal|EString]
		public Assignment getSignalsAssignment_11_2() { return cSignalsAssignment_11_2; }

		//[Signal|EString]
		public CrossReference getSignalsSignalCrossReference_11_2_0() { return cSignalsSignalCrossReference_11_2_0; }

		//EString
		public RuleCall getSignalsSignalEStringParserRuleCall_11_2_0_1() { return cSignalsSignalEStringParserRuleCall_11_2_0_1; }

		//("," signals+=[Signal|EString])*
		public Group getGroup_11_3() { return cGroup_11_3; }

		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }

		//signals+=[Signal|EString]
		public Assignment getSignalsAssignment_11_3_1() { return cSignalsAssignment_11_3_1; }

		//[Signal|EString]
		public CrossReference getSignalsSignalCrossReference_11_3_1_0() { return cSignalsSignalCrossReference_11_3_1_0; }

		//EString
		public RuleCall getSignalsSignalEStringParserRuleCall_11_3_1_0_1() { return cSignalsSignalEStringParserRuleCall_11_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_11_4() { return cRightParenthesisKeyword_11_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EDate");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//
		//	STRING;
		public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		////'EDate' / * TODO: implement this rule and an appropriate IValueConverter * /;
		//
		//EBoolean returns ecore::EBoolean:
		//
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class SpeedlimitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Speedlimit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpeedlimitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSpeedKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSpeedAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSpeedEIntParserRuleCall_2_1_0 = (RuleCall)cSpeedAssignment_2_1.eContents().get(0);
		private final Keyword cBelongsToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBelongsToAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cBelongsToNodeCrossReference_4_0 = (CrossReference)cBelongsToAssignment_4.eContents().get(0);
		private final RuleCall cBelongsToNodeEStringParserRuleCall_4_0_1 = (RuleCall)cBelongsToNodeCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Speedlimit:
		//
		//	"Speedlimit" "{" ("Speed" Speed=EInt)? "belongsTo" belongsTo=[Node|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Speedlimit" "{" ("Speed" Speed=EInt)? "belongsTo" belongsTo=[Node|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Speedlimit"
		public Keyword getSpeedlimitKeyword_0() { return cSpeedlimitKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("Speed" Speed=EInt)?
		public Group getGroup_2() { return cGroup_2; }

		//"Speed"
		public Keyword getSpeedKeyword_2_0() { return cSpeedKeyword_2_0; }

		//Speed=EInt
		public Assignment getSpeedAssignment_2_1() { return cSpeedAssignment_2_1; }

		//EInt
		public RuleCall getSpeedEIntParserRuleCall_2_1_0() { return cSpeedEIntParserRuleCall_2_1_0; }

		//"belongsTo"
		public Keyword getBelongsToKeyword_3() { return cBelongsToKeyword_3; }

		//belongsTo=[Node|EString]
		public Assignment getBelongsToAssignment_4() { return cBelongsToAssignment_4; }

		//[Node|EString]
		public CrossReference getBelongsToNodeCrossReference_4_0() { return cBelongsToNodeCrossReference_4_0; }

		//EString
		public RuleCall getBelongsToNodeEStringParserRuleCall_4_0_1() { return cBelongsToNodeEStringParserRuleCall_4_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class StopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBelongsToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBelongsToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cBelongsToNodeCrossReference_3_0 = (CrossReference)cBelongsToAssignment_3.eContents().get(0);
		private final RuleCall cBelongsToNodeEStringParserRuleCall_3_0_1 = (RuleCall)cBelongsToNodeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Stop:
		//
		//	"Stop" "{" "belongsTo" belongsTo=[Node|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Stop" "{" "belongsTo" belongsTo=[Node|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Stop"
		public Keyword getStopKeyword_0() { return cStopKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"belongsTo"
		public Keyword getBelongsToKeyword_2() { return cBelongsToKeyword_2; }

		//belongsTo=[Node|EString]
		public Assignment getBelongsToAssignment_3() { return cBelongsToAssignment_3; }

		//[Node|EString]
		public CrossReference getBelongsToNodeCrossReference_3_0() { return cBelongsToNodeCrossReference_3_0; }

		//EString
		public RuleCall getBelongsToNodeEStringParserRuleCall_3_0_1() { return cBelongsToNodeEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class YieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Yield");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cYieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBelongsToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBelongsToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cBelongsToNodeCrossReference_3_0 = (CrossReference)cBelongsToAssignment_3.eContents().get(0);
		private final RuleCall cBelongsToNodeEStringParserRuleCall_3_0_1 = (RuleCall)cBelongsToNodeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Yield:
		//
		//	"Yield" "{" "belongsTo" belongsTo=[Node|EString] "}";
		public ParserRule getRule() { return rule; }

		//"Yield" "{" "belongsTo" belongsTo=[Node|EString] "}"
		public Group getGroup() { return cGroup; }

		//"Yield"
		public Keyword getYieldKeyword_0() { return cYieldKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"belongsTo"
		public Keyword getBelongsToKeyword_2() { return cBelongsToKeyword_2; }

		//belongsTo=[Node|EString]
		public Assignment getBelongsToAssignment_3() { return cBelongsToAssignment_3; }

		//[Node|EString]
		public CrossReference getBelongsToNodeCrossReference_3_0() { return cBelongsToNodeCrossReference_3_0; }

		//EString
		public RuleCall getBelongsToNodeEStringParserRuleCall_3_0_1() { return cBelongsToNodeEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private HighwayElements pHighway;
	private NodeElements pNode;
	private SignalElements pSignal;
	private Node_ImplElements pNode_Impl;
	private CarElements pCar;
	private SegmentElements pSegment;
	private SemaphoreElements pSemaphore;
	private Signal_ImplElements pSignal_Impl;
	private ExtractorElements pExtractor;
	private InjectorElements pInjector;
	private EIntElements pEInt;
	private EDateElements pEDate;
	private EBooleanElements pEBoolean;
	private SpeedlimitElements pSpeedlimit;
	private StopElements pStop;
	private YieldElements pYield;
	private EStringElements pEString;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XHighwayGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.XHighway".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Highway:
	//
	//	{Highway} "Highway" "{" ("initNodes" "{" initNodes+=Node ("," initNodes+=Node)* "}")? ("initCars" "{" initCars+=Car
	//
	//	("," initCars+=Car)* "}")? ("initSegments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")?
	//
	//	("initSemaphore" "{" initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")? ("initSignal" "{"
	//
	//	initSignal+=Signal ("," initSignal+=Signal)* "}")? "}";
	public HighwayElements getHighwayAccess() {
		return (pHighway != null) ? pHighway : (pHighway = new HighwayElements());
	}
	
	public ParserRule getHighwayRule() {
		return getHighwayAccess().getRule();
	}

	//Node:
	//
	//	Node_Impl | Extractor | Injector;
	public NodeElements getNodeAccess() {
		return (pNode != null) ? pNode : (pNode = new NodeElements());
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}

	//Signal:
	//
	//	Signal_Impl | Speedlimit | Stop | Yield;
	public SignalElements getSignalAccess() {
		return (pSignal != null) ? pSignal : (pSignal = new SignalElements());
	}
	
	public ParserRule getSignalRule() {
		return getSignalAccess().getRule();
	}

	//Node_Impl returns Node:
	//
	//	{Node} "Node" "{" "hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")" "hasEnds" "("
	//
	//	hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore" semaphore=[Semaphore|EString])?
	//
	//	("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}";
	public Node_ImplElements getNode_ImplAccess() {
		return (pNode_Impl != null) ? pNode_Impl : (pNode_Impl = new Node_ImplElements());
	}
	
	public ParserRule getNode_ImplRule() {
		return getNode_ImplAccess().getRule();
	}

	//Car:
	//
	//	{Car} "Car" "{" ("timeIn" timeIn=EDate)? ("timeOut" timeOut=EDate)? ("isInSegment" isInSegment=[Segment|EString])?
	//
	//	"}";
	public CarElements getCarAccess() {
		return (pCar != null) ? pCar : (pCar = new CarElements());
	}
	
	public ParserRule getCarRule() {
		return getCarAccess().getRule();
	}

	//Segment:
	//
	//	{Segment} "Segment" "{" ("numLanes" numLanes=EInt)? ("length" length=EInt)? ("hasCars" "(" hasCars+=[Car|EString]
	//
	//	("," hasCars+=[Car|EString])* ")")? "}";
	public SegmentElements getSegmentAccess() {
		return (pSegment != null) ? pSegment : (pSegment = new SegmentElements());
	}
	
	public ParserRule getSegmentRule() {
		return getSegmentAccess().getRule();
	}

	//Semaphore:
	//
	//	"Semaphore" "{" ("canGo" canGo=EBoolean)? ("secondsRed" secondsRed=EInt)? ("secondsGreen" secondsGreen=EInt)?
	//
	//	"belongsTo" belongsTo=[Node|EString] "}";
	public SemaphoreElements getSemaphoreAccess() {
		return (pSemaphore != null) ? pSemaphore : (pSemaphore = new SemaphoreElements());
	}
	
	public ParserRule getSemaphoreRule() {
		return getSemaphoreAccess().getRule();
	}

	//Signal_Impl returns Signal:
	//
	//	"Signal" "{" "belongsTo" belongsTo=[Node|EString] "}";
	public Signal_ImplElements getSignal_ImplAccess() {
		return (pSignal_Impl != null) ? pSignal_Impl : (pSignal_Impl = new Signal_ImplElements());
	}
	
	public ParserRule getSignal_ImplRule() {
		return getSignal_ImplAccess().getRule();
	}

	//Extractor:
	//
	//	{Extractor} "Extractor" "{" ("hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")")?
	//
	//	"hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore"
	//
	//	semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}";
	public ExtractorElements getExtractorAccess() {
		return (pExtractor != null) ? pExtractor : (pExtractor = new ExtractorElements());
	}
	
	public ParserRule getExtractorRule() {
		return getExtractorAccess().getRule();
	}

	//Injector:
	//
	//	{Injector} "Injector" "{" ("carsPerHour" carsPerHour=EInt)? "hasStarts" "(" hasStarts+=[Segment|EString] (","
	//
	//	hasStarts+=[Segment|EString])* ")" ("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")")?
	//
	//	("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] (","
	//
	//	signals+=[Signal|EString])* ")")? "}";
	public InjectorElements getInjectorAccess() {
		return (pInjector != null) ? pInjector : (pInjector = new InjectorElements());
	}
	
	public ParserRule getInjectorRule() {
		return getInjectorAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//EDate returns ecore::EDate:
	//
	//	STRING;
	public EDateElements getEDateAccess() {
		return (pEDate != null) ? pEDate : (pEDate = new EDateElements());
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}

	////'EDate' / * TODO: implement this rule and an appropriate IValueConverter * /;
	//
	//EBoolean returns ecore::EBoolean:
	//
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//Speedlimit:
	//
	//	"Speedlimit" "{" ("Speed" Speed=EInt)? "belongsTo" belongsTo=[Node|EString] "}";
	public SpeedlimitElements getSpeedlimitAccess() {
		return (pSpeedlimit != null) ? pSpeedlimit : (pSpeedlimit = new SpeedlimitElements());
	}
	
	public ParserRule getSpeedlimitRule() {
		return getSpeedlimitAccess().getRule();
	}

	//Stop:
	//
	//	"Stop" "{" "belongsTo" belongsTo=[Node|EString] "}";
	public StopElements getStopAccess() {
		return (pStop != null) ? pStop : (pStop = new StopElements());
	}
	
	public ParserRule getStopRule() {
		return getStopAccess().getRule();
	}

	//Yield:
	//
	//	"Yield" "{" "belongsTo" belongsTo=[Node|EString] "}";
	public YieldElements getYieldAccess() {
		return (pYield != null) ? pYield : (pYield = new YieldElements());
	}
	
	public ParserRule getYieldRule() {
		return getYieldAccess().getRule();
	}

	//EString returns ecore::EString:
	//
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
