/*
* generated by Xtext
*/
package org.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.xtext.services.HighwayGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class HighwayParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private HighwayGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group(this, this, 0, inst);
			case 1: return new Node_Alternatives(this, this, 1, inst);
			case 2: return new Signal_Alternatives(this, this, 2, inst);
			case 3: return new Node_Impl_Group(this, this, 3, inst);
			case 4: return new Car_Group(this, this, 4, inst);
			case 5: return new Segment_Group(this, this, 5, inst);
			case 6: return new Semaphore_Group(this, this, 6, inst);
			case 7: return new Signal_Impl_Group(this, this, 7, inst);
			case 8: return new Extractor_Group(this, this, 8, inst);
			case 9: return new Injector_Group(this, this, 9, inst);
			case 10: return new Speedlimit_Group(this, this, 10, inst);
			case 11: return new Stop_Group(this, this, 11, inst);
			case 12: return new Yield_Group(this, this, 12, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Highway ****************
 *
 * Highway returns highway:
 * 
 * 	{highway} "Highway" "{" ("Segments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")? ("Nodes" "{"
 * 
 * 	initNodes+=Node ("," initNodes+=Node)* "}")? ("Cars" "{" initCars+=Car ("," initCars+=Car)* "}")? ("Semaphores" "{"
 * 
 * 	initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")? ("Signals" "{" initSignal+=Signal (","
 * 
 * 	initSignal+=Signal)* "}")? "}";
 *
 **/

// {highway} "Highway" "{" ("Segments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")? ("Nodes" "{"
// 
// initNodes+=Node ("," initNodes+=Node)* "}")? ("Cars" "{" initCars+=Car ("," initCars+=Car)* "}")? ("Semaphores" "{"
// 
// initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")? ("Signals" "{" initSignal+=Signal (","
// 
// initSignal+=Signal)* "}")? "}"
protected class Highway_Group extends GroupToken {
	
	public Highway_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHighwayAccess().getHighwayAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {highway}
protected class Highway_HighwayAction_0 extends ActionToken  {

	public Highway_HighwayAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getHighwayAccess().getHighwayAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Highway"
protected class Highway_HighwayKeyword_1 extends KeywordToken  {
	
	public Highway_HighwayKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getHighwayKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_HighwayAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Highway_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public Highway_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_HighwayKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("Segments" "{" initSegments+=Segment ("," initSegments+=Segment)* "}")?
protected class Highway_Group_3 extends GroupToken {
	
	public Highway_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_RightCurlyBracketKeyword_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Segments"
protected class Highway_SegmentsKeyword_3_0 extends KeywordToken  {
	
	public Highway_SegmentsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getSegmentsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Highway_LeftCurlyBracketKeyword_3_1 extends KeywordToken  {
	
	public Highway_LeftCurlyBracketKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_SegmentsKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// initSegments+=Segment
protected class Highway_InitSegmentsAssignment_3_2 extends AssignmentToken  {
	
	public Highway_InitSegmentsAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitSegmentsAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initSegments",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initSegments");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSegmentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitSegmentsSegmentParserRuleCall_3_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_LeftCurlyBracketKeyword_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," initSegments+=Segment)*
protected class Highway_Group_3_3 extends GroupToken {
	
	public Highway_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_InitSegmentsAssignment_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Highway_CommaKeyword_3_3_0 extends KeywordToken  {
	
	public Highway_CommaKeyword_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getCommaKeyword_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitSegmentsAssignment_3_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// initSegments+=Segment
protected class Highway_InitSegmentsAssignment_3_3_1 extends AssignmentToken  {
	
	public Highway_InitSegmentsAssignment_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitSegmentsAssignment_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initSegments",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initSegments");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSegmentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitSegmentsSegmentParserRuleCall_3_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_CommaKeyword_3_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Highway_RightCurlyBracketKeyword_3_4 extends KeywordToken  {
	
	public Highway_RightCurlyBracketKeyword_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitSegmentsAssignment_3_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("Nodes" "{" initNodes+=Node ("," initNodes+=Node)* "}")?
protected class Highway_Group_4 extends GroupToken {
	
	public Highway_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_RightCurlyBracketKeyword_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Nodes"
protected class Highway_NodesKeyword_4_0 extends KeywordToken  {
	
	public Highway_NodesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getNodesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Highway_LeftCurlyBracketKeyword_4_1 extends KeywordToken  {
	
	public Highway_LeftCurlyBracketKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_NodesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// initNodes+=Node
protected class Highway_InitNodesAssignment_4_2 extends AssignmentToken  {
	
	public Highway_InitNodesAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitNodesAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initNodes",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initNodes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNodeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitNodesNodeParserRuleCall_4_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_LeftCurlyBracketKeyword_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," initNodes+=Node)*
protected class Highway_Group_4_3 extends GroupToken {
	
	public Highway_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_InitNodesAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Highway_CommaKeyword_4_3_0 extends KeywordToken  {
	
	public Highway_CommaKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getCommaKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitNodesAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// initNodes+=Node
protected class Highway_InitNodesAssignment_4_3_1 extends AssignmentToken  {
	
	public Highway_InitNodesAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitNodesAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initNodes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initNodes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNodeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitNodesNodeParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_CommaKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Highway_RightCurlyBracketKeyword_4_4 extends KeywordToken  {
	
	public Highway_RightCurlyBracketKeyword_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitNodesAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("Cars" "{" initCars+=Car ("," initCars+=Car)* "}")?
protected class Highway_Group_5 extends GroupToken {
	
	public Highway_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_RightCurlyBracketKeyword_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Cars"
protected class Highway_CarsKeyword_5_0 extends KeywordToken  {
	
	public Highway_CarsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getCarsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Highway_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Highway_LeftCurlyBracketKeyword_5_1 extends KeywordToken  {
	
	public Highway_LeftCurlyBracketKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_CarsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// initCars+=Car
protected class Highway_InitCarsAssignment_5_2 extends AssignmentToken  {
	
	public Highway_InitCarsAssignment_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitCarsAssignment_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initCars",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initCars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCarRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitCarsCarParserRuleCall_5_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_LeftCurlyBracketKeyword_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," initCars+=Car)*
protected class Highway_Group_5_3 extends GroupToken {
	
	public Highway_Group_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_InitCarsAssignment_5_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Highway_CommaKeyword_5_3_0 extends KeywordToken  {
	
	public Highway_CommaKeyword_5_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getCommaKeyword_5_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_5_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitCarsAssignment_5_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// initCars+=Car
protected class Highway_InitCarsAssignment_5_3_1 extends AssignmentToken  {
	
	public Highway_InitCarsAssignment_5_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitCarsAssignment_5_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initCars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initCars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCarRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitCarsCarParserRuleCall_5_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_CommaKeyword_5_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Highway_RightCurlyBracketKeyword_5_4 extends KeywordToken  {
	
	public Highway_RightCurlyBracketKeyword_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_5_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitCarsAssignment_5_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("Semaphores" "{" initSemaphore+=Semaphore ("," initSemaphore+=Semaphore)* "}")?
protected class Highway_Group_6 extends GroupToken {
	
	public Highway_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_RightCurlyBracketKeyword_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Semaphores"
protected class Highway_SemaphoresKeyword_6_0 extends KeywordToken  {
	
	public Highway_SemaphoresKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getSemaphoresKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Highway_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Highway_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Highway_LeftCurlyBracketKeyword_6_1 extends KeywordToken  {
	
	public Highway_LeftCurlyBracketKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_SemaphoresKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// initSemaphore+=Semaphore
protected class Highway_InitSemaphoreAssignment_6_2 extends AssignmentToken  {
	
	public Highway_InitSemaphoreAssignment_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitSemaphoreAssignment_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initSemaphore",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initSemaphore");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSemaphoreRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitSemaphoreSemaphoreParserRuleCall_6_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_LeftCurlyBracketKeyword_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," initSemaphore+=Semaphore)*
protected class Highway_Group_6_3 extends GroupToken {
	
	public Highway_Group_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_InitSemaphoreAssignment_6_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Highway_CommaKeyword_6_3_0 extends KeywordToken  {
	
	public Highway_CommaKeyword_6_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getCommaKeyword_6_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_6_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitSemaphoreAssignment_6_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// initSemaphore+=Semaphore
protected class Highway_InitSemaphoreAssignment_6_3_1 extends AssignmentToken  {
	
	public Highway_InitSemaphoreAssignment_6_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitSemaphoreAssignment_6_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initSemaphore",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initSemaphore");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSemaphoreRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitSemaphoreSemaphoreParserRuleCall_6_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_CommaKeyword_6_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Highway_RightCurlyBracketKeyword_6_4 extends KeywordToken  {
	
	public Highway_RightCurlyBracketKeyword_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_6_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitSemaphoreAssignment_6_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("Signals" "{" initSignal+=Signal ("," initSignal+=Signal)* "}")?
protected class Highway_Group_7 extends GroupToken {
	
	public Highway_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_RightCurlyBracketKeyword_7_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Signals"
protected class Highway_SignalsKeyword_7_0 extends KeywordToken  {
	
	public Highway_SignalsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getSignalsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Highway_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Highway_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Highway_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Highway_LeftCurlyBracketKeyword_7_1 extends KeywordToken  {
	
	public Highway_LeftCurlyBracketKeyword_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_SignalsKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// initSignal+=Signal
protected class Highway_InitSignalAssignment_7_2 extends AssignmentToken  {
	
	public Highway_InitSignalAssignment_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitSignalAssignment_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initSignal",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initSignal");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSignalRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitSignalSignalParserRuleCall_7_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_LeftCurlyBracketKeyword_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," initSignal+=Signal)*
protected class Highway_Group_7_3 extends GroupToken {
	
	public Highway_Group_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHighwayAccess().getGroup_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_InitSignalAssignment_7_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Highway_CommaKeyword_7_3_0 extends KeywordToken  {
	
	public Highway_CommaKeyword_7_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getCommaKeyword_7_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_7_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitSignalAssignment_7_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// initSignal+=Signal
protected class Highway_InitSignalAssignment_7_3_1 extends AssignmentToken  {
	
	public Highway_InitSignalAssignment_7_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHighwayAccess().getInitSignalAssignment_7_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("initSignal",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("initSignal");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSignalRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getHighwayAccess().getInitSignalSignalParserRuleCall_7_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Highway_CommaKeyword_7_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Highway_RightCurlyBracketKeyword_7_4 extends KeywordToken  {
	
	public Highway_RightCurlyBracketKeyword_7_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_7_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_7_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_InitSignalAssignment_7_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class Highway_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Highway_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Highway_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Highway_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Highway_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Highway_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Highway_Group_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Highway_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}


/************ end Rule Highway ****************/


/************ begin Rule Node ****************
 *
 * Node:
 * 
 * 	Node_Impl | Extractor | Injector;
 *
 **/

// Node_Impl | Extractor | Injector
protected class Node_Alternatives extends AlternativesToken {

	public Node_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNodeAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Node_ImplParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_ExtractorParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Node_InjectorParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExtractorAccess().getExtractorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getInjectorAccess().getInjectorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNode_ImplAccess().getNodeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Node_Impl
protected class Node_Node_ImplParserRuleCall_0 extends RuleCallToken {
	
	public Node_Node_ImplParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNodeAccess().getNode_ImplParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNode_ImplAccess().getNodeAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Node_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Extractor
protected class Node_ExtractorParserRuleCall_1 extends RuleCallToken {
	
	public Node_ExtractorParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNodeAccess().getExtractorParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExtractorAccess().getExtractorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Extractor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Injector
protected class Node_InjectorParserRuleCall_2 extends RuleCallToken {
	
	public Node_InjectorParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNodeAccess().getInjectorParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInjectorAccess().getInjectorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Injector_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Node ****************/


/************ begin Rule Signal ****************
 *
 * Signal:
 * 
 * 	Signal_Impl | Speedlimit | Stop | Yield;
 *
 **/

// Signal_Impl | Speedlimit | Stop | Yield
protected class Signal_Alternatives extends AlternativesToken {

	public Signal_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSignalAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Signal_ImplParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Signal_SpeedlimitParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Signal_StopParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Signal_YieldParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSignal_ImplAccess().getSignalAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSpeedlimitRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStopRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getYieldRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Signal_Impl
protected class Signal_Signal_ImplParserRuleCall_0 extends RuleCallToken {
	
	public Signal_Signal_ImplParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSignalAccess().getSignal_ImplParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSignal_ImplAccess().getSignalAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Signal_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Speedlimit
protected class Signal_SpeedlimitParserRuleCall_1 extends RuleCallToken {
	
	public Signal_SpeedlimitParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSignalAccess().getSpeedlimitParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpeedlimitRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Speedlimit_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Stop
protected class Signal_StopParserRuleCall_2 extends RuleCallToken {
	
	public Signal_StopParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSignalAccess().getStopParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStopRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Stop_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Yield
protected class Signal_YieldParserRuleCall_3 extends RuleCallToken {
	
	public Signal_YieldParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSignalAccess().getYieldParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getYieldRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Yield_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Signal ****************/


/************ begin Rule Node_Impl ****************
 *
 * Node_Impl returns Node:
 * 
 * 	{Node} "Node" name=EString "{" "hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")"
 * 
 * 	"hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore"
 * 
 * 	semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}";
 *
 **/

// {Node} "Node" name=EString "{" "hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")"
// 
// "hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")" ("semaphore"
// 
// semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")? "}"
protected class Node_Impl_Group extends GroupToken {
	
	public Node_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_RightCurlyBracketKeyword_16(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNode_ImplAccess().getNodeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Node}
protected class Node_Impl_NodeAction_0 extends ActionToken  {

	public Node_Impl_NodeAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getNodeAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Node"
protected class Node_Impl_NodeKeyword_1 extends KeywordToken  {
	
	public Node_Impl_NodeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getNodeKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_NodeAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Node_Impl_NameAssignment_2 extends AssignmentToken  {
	
	public Node_Impl_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_NodeKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNode_ImplAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getNode_ImplAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Node_Impl_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Node_Impl_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hasStarts"
protected class Node_Impl_HasStartsKeyword_4 extends KeywordToken  {
	
	public Node_Impl_HasStartsKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getHasStartsKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class Node_Impl_LeftParenthesisKeyword_5 extends KeywordToken  {
	
	public Node_Impl_LeftParenthesisKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getLeftParenthesisKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_HasStartsKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasStarts+=[Segment|EString]
protected class Node_Impl_HasStartsAssignment_6 extends AssignmentToken  {
	
	public Node_Impl_HasStartsAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getHasStartsAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_LeftParenthesisKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasStarts",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasStarts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getHasStartsSegmentCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getHasStartsSegmentCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasStarts+=[Segment|EString])*
protected class Node_Impl_Group_7 extends GroupToken {
	
	public Node_Impl_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_HasStartsAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Node_Impl_CommaKeyword_7_0 extends KeywordToken  {
	
	public Node_Impl_CommaKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getCommaKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_HasStartsAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasStarts+=[Segment|EString]
protected class Node_Impl_HasStartsAssignment_7_1 extends AssignmentToken  {
	
	public Node_Impl_HasStartsAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getHasStartsAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_CommaKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasStarts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasStarts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getHasStartsSegmentCrossReference_7_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getHasStartsSegmentCrossReference_7_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Node_Impl_RightParenthesisKeyword_8 extends KeywordToken  {
	
	public Node_Impl_RightParenthesisKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getRightParenthesisKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_HasStartsAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "hasEnds"
protected class Node_Impl_HasEndsKeyword_9 extends KeywordToken  {
	
	public Node_Impl_HasEndsKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getHasEndsKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_RightParenthesisKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class Node_Impl_LeftParenthesisKeyword_10 extends KeywordToken  {
	
	public Node_Impl_LeftParenthesisKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getLeftParenthesisKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_HasEndsKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasEnds+=[Segment|EString]
protected class Node_Impl_HasEndsAssignment_11 extends AssignmentToken  {
	
	public Node_Impl_HasEndsAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getHasEndsAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_LeftParenthesisKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasEnds",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasEnds");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getHasEndsSegmentCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getHasEndsSegmentCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasEnds+=[Segment|EString])*
protected class Node_Impl_Group_12 extends GroupToken {
	
	public Node_Impl_Group_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getGroup_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_HasEndsAssignment_12_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Node_Impl_CommaKeyword_12_0 extends KeywordToken  {
	
	public Node_Impl_CommaKeyword_12_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getCommaKeyword_12_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_HasEndsAssignment_11(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasEnds+=[Segment|EString]
protected class Node_Impl_HasEndsAssignment_12_1 extends AssignmentToken  {
	
	public Node_Impl_HasEndsAssignment_12_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getHasEndsAssignment_12_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_CommaKeyword_12_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasEnds",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasEnds");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getHasEndsSegmentCrossReference_12_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getHasEndsSegmentCrossReference_12_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Node_Impl_RightParenthesisKeyword_13 extends KeywordToken  {
	
	public Node_Impl_RightParenthesisKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getRightParenthesisKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_HasEndsAssignment_11(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("semaphore" semaphore=[Semaphore|EString])?
protected class Node_Impl_Group_14 extends GroupToken {
	
	public Node_Impl_Group_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getGroup_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_SemaphoreAssignment_14_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "semaphore"
protected class Node_Impl_SemaphoreKeyword_14_0 extends KeywordToken  {
	
	public Node_Impl_SemaphoreKeyword_14_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getSemaphoreKeyword_14_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_RightParenthesisKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// semaphore=[Semaphore|EString]
protected class Node_Impl_SemaphoreAssignment_14_1 extends AssignmentToken  {
	
	public Node_Impl_SemaphoreAssignment_14_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getSemaphoreAssignment_14_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_SemaphoreKeyword_14_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("semaphore",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("semaphore");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getSemaphoreSemaphoreCrossReference_14_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getSemaphoreSemaphoreCrossReference_14_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")?
protected class Node_Impl_Group_15 extends GroupToken {
	
	public Node_Impl_Group_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getGroup_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_RightParenthesisKeyword_15_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "signals"
protected class Node_Impl_SignalsKeyword_15_0 extends KeywordToken  {
	
	public Node_Impl_SignalsKeyword_15_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getSignalsKeyword_15_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_14(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_RightParenthesisKeyword_13(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "("
protected class Node_Impl_LeftParenthesisKeyword_15_1 extends KeywordToken  {
	
	public Node_Impl_LeftParenthesisKeyword_15_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getLeftParenthesisKeyword_15_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_SignalsKeyword_15_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// signals+=[Signal|EString]
protected class Node_Impl_SignalsAssignment_15_2 extends AssignmentToken  {
	
	public Node_Impl_SignalsAssignment_15_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getSignalsAssignment_15_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_LeftParenthesisKeyword_15_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signals",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signals");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getSignalsSignalCrossReference_15_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getSignalsSignalCrossReference_15_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," signals+=[Signal|EString])*
protected class Node_Impl_Group_15_3 extends GroupToken {
	
	public Node_Impl_Group_15_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getGroup_15_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_SignalsAssignment_15_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Node_Impl_CommaKeyword_15_3_0 extends KeywordToken  {
	
	public Node_Impl_CommaKeyword_15_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getCommaKeyword_15_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_15_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_SignalsAssignment_15_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// signals+=[Signal|EString]
protected class Node_Impl_SignalsAssignment_15_3_1 extends AssignmentToken  {
	
	public Node_Impl_SignalsAssignment_15_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getSignalsAssignment_15_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_CommaKeyword_15_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signals",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signals");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNode_ImplAccess().getSignalsSignalCrossReference_15_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNode_ImplAccess().getSignalsSignalCrossReference_15_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Node_Impl_RightParenthesisKeyword_15_4 extends KeywordToken  {
	
	public Node_Impl_RightParenthesisKeyword_15_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getRightParenthesisKeyword_15_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_15_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_SignalsAssignment_15_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class Node_Impl_RightCurlyBracketKeyword_16 extends KeywordToken  {
	
	public Node_Impl_RightCurlyBracketKeyword_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNode_ImplAccess().getRightCurlyBracketKeyword_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Node_Impl_Group_15(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Node_Impl_Group_14(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Node_Impl_RightParenthesisKeyword_13(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule Node_Impl ****************/


/************ begin Rule Car ****************
 *
 * Car:
 * 
 * 	{Car} "Car" name=EString "{" ("timeIn" timeIn=EDate)? ("timeOut" timeOut=EDate)? ("isInSegment"
 * 
 * 	isInSegment=[Segment|EString])? "}";
 *
 **/

// {Car} "Car" name=EString "{" ("timeIn" timeIn=EDate)? ("timeOut" timeOut=EDate)? ("isInSegment"
// 
// isInSegment=[Segment|EString])? "}"
protected class Car_Group extends GroupToken {
	
	public Car_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCarAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCarAccess().getCarAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Car}
protected class Car_CarAction_0 extends ActionToken  {

	public Car_CarAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCarAccess().getCarAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Car"
protected class Car_CarKeyword_1 extends KeywordToken  {
	
	public Car_CarKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarAccess().getCarKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_CarAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Car_NameAssignment_2 extends AssignmentToken  {
	
	public Car_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCarAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_CarKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCarAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCarAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Car_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Car_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("timeIn" timeIn=EDate)?
protected class Car_Group_4 extends GroupToken {
	
	public Car_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCarAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_TimeInAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "timeIn"
protected class Car_TimeInKeyword_4_0 extends KeywordToken  {
	
	public Car_TimeInKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarAccess().getTimeInKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// timeIn=EDate
protected class Car_TimeInAssignment_4_1 extends AssignmentToken  {
	
	public Car_TimeInAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCarAccess().getTimeInAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_TimeInKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("timeIn",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("timeIn");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCarAccess().getTimeInEDateParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCarAccess().getTimeInEDateParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("timeOut" timeOut=EDate)?
protected class Car_Group_5 extends GroupToken {
	
	public Car_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCarAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_TimeOutAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "timeOut"
protected class Car_TimeOutKeyword_5_0 extends KeywordToken  {
	
	public Car_TimeOutKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarAccess().getTimeOutKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Car_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// timeOut=EDate
protected class Car_TimeOutAssignment_5_1 extends AssignmentToken  {
	
	public Car_TimeOutAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCarAccess().getTimeOutAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_TimeOutKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("timeOut",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("timeOut");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCarAccess().getTimeOutEDateParserRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCarAccess().getTimeOutEDateParserRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("isInSegment" isInSegment=[Segment|EString])?
protected class Car_Group_6 extends GroupToken {
	
	public Car_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCarAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_IsInSegmentAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isInSegment"
protected class Car_IsInSegmentKeyword_6_0 extends KeywordToken  {
	
	public Car_IsInSegmentKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarAccess().getIsInSegmentKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Car_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Car_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// isInSegment=[Segment|EString]
protected class Car_IsInSegmentAssignment_6_1 extends AssignmentToken  {
	
	public Car_IsInSegmentAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCarAccess().getIsInSegmentAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_IsInSegmentKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isInSegment",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isInSegment");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCarAccess().getIsInSegmentSegmentCrossReference_6_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCarAccess().getIsInSegmentSegmentCrossReference_6_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "}"
protected class Car_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public Car_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Car_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Car_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Car_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Car_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule Car ****************/


/************ begin Rule Segment ****************
 *
 * Segment:
 * 
 * 	{Segment} "Segment" name=EString "{" ("numLanes" numLanes=EInt)? ("length" length=EInt)? ("hasCars" "("
 * 
 * 	hasCars+=[Car|EString] ("," hasCars+=[Car|EString])* ")")? "}";
 *
 **/

// {Segment} "Segment" name=EString "{" ("numLanes" numLanes=EInt)? ("length" length=EInt)? ("hasCars" "("
// 
// hasCars+=[Car|EString] ("," hasCars+=[Car|EString])* ")")? "}"
protected class Segment_Group extends GroupToken {
	
	public Segment_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSegmentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSegmentAccess().getSegmentAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Segment}
protected class Segment_SegmentAction_0 extends ActionToken  {

	public Segment_SegmentAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSegmentAccess().getSegmentAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Segment"
protected class Segment_SegmentKeyword_1 extends KeywordToken  {
	
	public Segment_SegmentKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getSegmentKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_SegmentAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Segment_NameAssignment_2 extends AssignmentToken  {
	
	public Segment_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSegmentAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_SegmentKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSegmentAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSegmentAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Segment_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Segment_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("numLanes" numLanes=EInt)?
protected class Segment_Group_4 extends GroupToken {
	
	public Segment_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSegmentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_NumLanesAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "numLanes"
protected class Segment_NumLanesKeyword_4_0 extends KeywordToken  {
	
	public Segment_NumLanesKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getNumLanesKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// numLanes=EInt
protected class Segment_NumLanesAssignment_4_1 extends AssignmentToken  {
	
	public Segment_NumLanesAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSegmentAccess().getNumLanesAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_NumLanesKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("numLanes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("numLanes");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSegmentAccess().getNumLanesEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSegmentAccess().getNumLanesEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("length" length=EInt)?
protected class Segment_Group_5 extends GroupToken {
	
	public Segment_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSegmentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_LengthAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "length"
protected class Segment_LengthKeyword_5_0 extends KeywordToken  {
	
	public Segment_LengthKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getLengthKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Segment_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// length=EInt
protected class Segment_LengthAssignment_5_1 extends AssignmentToken  {
	
	public Segment_LengthAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSegmentAccess().getLengthAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_LengthKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("length",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("length");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSegmentAccess().getLengthEIntParserRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSegmentAccess().getLengthEIntParserRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("hasCars" "(" hasCars+=[Car|EString] ("," hasCars+=[Car|EString])* ")")?
protected class Segment_Group_6 extends GroupToken {
	
	public Segment_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSegmentAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_RightParenthesisKeyword_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hasCars"
protected class Segment_HasCarsKeyword_6_0 extends KeywordToken  {
	
	public Segment_HasCarsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getHasCarsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Segment_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Segment_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// "("
protected class Segment_LeftParenthesisKeyword_6_1 extends KeywordToken  {
	
	public Segment_LeftParenthesisKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getLeftParenthesisKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_HasCarsKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasCars+=[Car|EString]
protected class Segment_HasCarsAssignment_6_2 extends AssignmentToken  {
	
	public Segment_HasCarsAssignment_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSegmentAccess().getHasCarsAssignment_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_LeftParenthesisKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasCars",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasCars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSegmentAccess().getHasCarsCarCrossReference_6_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSegmentAccess().getHasCarsCarCrossReference_6_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasCars+=[Car|EString])*
protected class Segment_Group_6_3 extends GroupToken {
	
	public Segment_Group_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSegmentAccess().getGroup_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_HasCarsAssignment_6_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Segment_CommaKeyword_6_3_0 extends KeywordToken  {
	
	public Segment_CommaKeyword_6_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getCommaKeyword_6_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group_6_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Segment_HasCarsAssignment_6_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasCars+=[Car|EString]
protected class Segment_HasCarsAssignment_6_3_1 extends AssignmentToken  {
	
	public Segment_HasCarsAssignment_6_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSegmentAccess().getHasCarsAssignment_6_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_CommaKeyword_6_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasCars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasCars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSegmentAccess().getHasCarsCarCrossReference_6_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSegmentAccess().getHasCarsCarCrossReference_6_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Segment_RightParenthesisKeyword_6_4 extends KeywordToken  {
	
	public Segment_RightParenthesisKeyword_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getRightParenthesisKeyword_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group_6_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Segment_HasCarsAssignment_6_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class Segment_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public Segment_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSegmentAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Segment_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Segment_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Segment_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Segment_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule Segment ****************/


/************ begin Rule Semaphore ****************
 *
 * Semaphore:
 * 
 * 	{Semaphore} "Semaphore" name=EString "{" ("canGo" canGo=EBoolean)? ("secondsRed" secondsRed=EInt)? ("secondsGreen"
 * 
 * 	secondsGreen=EInt)? "belongsTo" belongsTo=[Node|EString] "}";
 *
 **/

// {Semaphore} "Semaphore" name=EString "{" ("canGo" canGo=EBoolean)? ("secondsRed" secondsRed=EInt)? ("secondsGreen"
// 
// secondsGreen=EInt)? "belongsTo" belongsTo=[Node|EString] "}"
protected class Semaphore_Group extends GroupToken {
	
	public Semaphore_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSemaphoreAccess().getSemaphoreAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Semaphore}
protected class Semaphore_SemaphoreAction_0 extends ActionToken  {

	public Semaphore_SemaphoreAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getSemaphoreAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Semaphore"
protected class Semaphore_SemaphoreKeyword_1 extends KeywordToken  {
	
	public Semaphore_SemaphoreKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getSemaphoreKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_SemaphoreAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Semaphore_NameAssignment_2 extends AssignmentToken  {
	
	public Semaphore_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_SemaphoreKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSemaphoreAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSemaphoreAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Semaphore_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Semaphore_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("canGo" canGo=EBoolean)?
protected class Semaphore_Group_4 extends GroupToken {
	
	public Semaphore_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_CanGoAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "canGo"
protected class Semaphore_CanGoKeyword_4_0 extends KeywordToken  {
	
	public Semaphore_CanGoKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getCanGoKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// canGo=EBoolean
protected class Semaphore_CanGoAssignment_4_1 extends AssignmentToken  {
	
	public Semaphore_CanGoAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getCanGoAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_CanGoKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("canGo",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("canGo");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSemaphoreAccess().getCanGoEBooleanParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSemaphoreAccess().getCanGoEBooleanParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("secondsRed" secondsRed=EInt)?
protected class Semaphore_Group_5 extends GroupToken {
	
	public Semaphore_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_SecondsRedAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "secondsRed"
protected class Semaphore_SecondsRedKeyword_5_0 extends KeywordToken  {
	
	public Semaphore_SecondsRedKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getSecondsRedKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Semaphore_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// secondsRed=EInt
protected class Semaphore_SecondsRedAssignment_5_1 extends AssignmentToken  {
	
	public Semaphore_SecondsRedAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getSecondsRedAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_SecondsRedKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("secondsRed",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("secondsRed");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSemaphoreAccess().getSecondsRedEIntParserRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSemaphoreAccess().getSecondsRedEIntParserRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("secondsGreen" secondsGreen=EInt)?
protected class Semaphore_Group_6 extends GroupToken {
	
	public Semaphore_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_SecondsGreenAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "secondsGreen"
protected class Semaphore_SecondsGreenKeyword_6_0 extends KeywordToken  {
	
	public Semaphore_SecondsGreenKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getSecondsGreenKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Semaphore_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Semaphore_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// secondsGreen=EInt
protected class Semaphore_SecondsGreenAssignment_6_1 extends AssignmentToken  {
	
	public Semaphore_SecondsGreenAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getSecondsGreenAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_SecondsGreenKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("secondsGreen",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("secondsGreen");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSemaphoreAccess().getSecondsGreenEIntParserRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSemaphoreAccess().getSecondsGreenEIntParserRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// "belongsTo"
protected class Semaphore_BelongsToKeyword_7 extends KeywordToken  {
	
	public Semaphore_BelongsToKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getBelongsToKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Semaphore_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Semaphore_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Semaphore_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// belongsTo=[Node|EString]
protected class Semaphore_BelongsToAssignment_8 extends AssignmentToken  {
	
	public Semaphore_BelongsToAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getBelongsToAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_BelongsToKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("belongsTo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("belongsTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSemaphoreAccess().getBelongsToNodeCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSemaphoreAccess().getBelongsToNodeCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class Semaphore_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public Semaphore_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSemaphoreAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Semaphore_BelongsToAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Semaphore ****************/


/************ begin Rule Signal_Impl ****************
 *
 * Signal_Impl returns Signal:
 * 
 * 	{Signal} "Signal" name=EString "{" "belongsTo" belongsTo=[Node|EString] "}";
 *
 **/

// {Signal} "Signal" name=EString "{" "belongsTo" belongsTo=[Node|EString] "}"
protected class Signal_Impl_Group extends GroupToken {
	
	public Signal_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSignal_ImplAccess().getSignalAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Signal}
protected class Signal_Impl_SignalAction_0 extends ActionToken  {

	public Signal_Impl_SignalAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getSignalAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Signal"
protected class Signal_Impl_SignalKeyword_1 extends KeywordToken  {
	
	public Signal_Impl_SignalKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getSignalKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_SignalAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Signal_Impl_NameAssignment_2 extends AssignmentToken  {
	
	public Signal_Impl_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_SignalKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSignal_ImplAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSignal_ImplAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Signal_Impl_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Signal_Impl_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "belongsTo"
protected class Signal_Impl_BelongsToKeyword_4 extends KeywordToken  {
	
	public Signal_Impl_BelongsToKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getBelongsToKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// belongsTo=[Node|EString]
protected class Signal_Impl_BelongsToAssignment_5 extends AssignmentToken  {
	
	public Signal_Impl_BelongsToAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getBelongsToAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_BelongsToKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("belongsTo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("belongsTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSignal_ImplAccess().getBelongsToNodeCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSignal_ImplAccess().getBelongsToNodeCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class Signal_Impl_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public Signal_Impl_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSignal_ImplAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Signal_Impl_BelongsToAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Signal_Impl ****************/



/************ begin Rule Extractor ****************
 *
 * Extractor:
 * 
 * 	{Extractor} "Extractor" name=EString "{" ("hasStarts" "(" hasStarts+=[Segment|EString] (","
 * 
 * 	hasStarts+=[Segment|EString])* ")")? "hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")"
 * 
 * 	("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] (","
 * 
 * 	signals+=[Signal|EString])* ")")? "}";
 *
 **/

// {Extractor} "Extractor" name=EString "{" ("hasStarts" "(" hasStarts+=[Segment|EString] (","
// 
// hasStarts+=[Segment|EString])* ")")? "hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")"
// 
// ("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])*
// 
// ")")? "}"
protected class Extractor_Group extends GroupToken {
	
	public Extractor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExtractorAccess().getExtractorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Extractor}
protected class Extractor_ExtractorAction_0 extends ActionToken  {

	public Extractor_ExtractorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getExtractorAccess().getExtractorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Extractor"
protected class Extractor_ExtractorKeyword_1 extends KeywordToken  {
	
	public Extractor_ExtractorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getExtractorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_ExtractorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Extractor_NameAssignment_2 extends AssignmentToken  {
	
	public Extractor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_ExtractorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExtractorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getExtractorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Extractor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Extractor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("hasStarts" "(" hasStarts+=[Segment|EString] ("," hasStarts+=[Segment|EString])* ")")?
protected class Extractor_Group_4 extends GroupToken {
	
	public Extractor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_RightParenthesisKeyword_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hasStarts"
protected class Extractor_HasStartsKeyword_4_0 extends KeywordToken  {
	
	public Extractor_HasStartsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getHasStartsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class Extractor_LeftParenthesisKeyword_4_1 extends KeywordToken  {
	
	public Extractor_LeftParenthesisKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getLeftParenthesisKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_HasStartsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasStarts+=[Segment|EString]
protected class Extractor_HasStartsAssignment_4_2 extends AssignmentToken  {
	
	public Extractor_HasStartsAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getHasStartsAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_LeftParenthesisKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasStarts",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasStarts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getHasStartsSegmentCrossReference_4_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getHasStartsSegmentCrossReference_4_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasStarts+=[Segment|EString])*
protected class Extractor_Group_4_3 extends GroupToken {
	
	public Extractor_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_HasStartsAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Extractor_CommaKeyword_4_3_0 extends KeywordToken  {
	
	public Extractor_CommaKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getCommaKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_HasStartsAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasStarts+=[Segment|EString]
protected class Extractor_HasStartsAssignment_4_3_1 extends AssignmentToken  {
	
	public Extractor_HasStartsAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getHasStartsAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_CommaKeyword_4_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasStarts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasStarts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getHasStartsSegmentCrossReference_4_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getHasStartsSegmentCrossReference_4_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Extractor_RightParenthesisKeyword_4_4 extends KeywordToken  {
	
	public Extractor_RightParenthesisKeyword_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getRightParenthesisKeyword_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_HasStartsAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "hasEnds"
protected class Extractor_HasEndsKeyword_5 extends KeywordToken  {
	
	public Extractor_HasEndsKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getHasEndsKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "("
protected class Extractor_LeftParenthesisKeyword_6 extends KeywordToken  {
	
	public Extractor_LeftParenthesisKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getLeftParenthesisKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_HasEndsKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasEnds+=[Segment|EString]
protected class Extractor_HasEndsAssignment_7 extends AssignmentToken  {
	
	public Extractor_HasEndsAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getHasEndsAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_LeftParenthesisKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasEnds",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasEnds");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getHasEndsSegmentCrossReference_7_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getHasEndsSegmentCrossReference_7_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasEnds+=[Segment|EString])*
protected class Extractor_Group_8 extends GroupToken {
	
	public Extractor_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_HasEndsAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Extractor_CommaKeyword_8_0 extends KeywordToken  {
	
	public Extractor_CommaKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getCommaKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_HasEndsAssignment_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasEnds+=[Segment|EString]
protected class Extractor_HasEndsAssignment_8_1 extends AssignmentToken  {
	
	public Extractor_HasEndsAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getHasEndsAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_CommaKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasEnds",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasEnds");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getHasEndsSegmentCrossReference_8_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getHasEndsSegmentCrossReference_8_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Extractor_RightParenthesisKeyword_9 extends KeywordToken  {
	
	public Extractor_RightParenthesisKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getRightParenthesisKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_HasEndsAssignment_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("semaphore" semaphore=[Semaphore|EString])?
protected class Extractor_Group_10 extends GroupToken {
	
	public Extractor_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_SemaphoreAssignment_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "semaphore"
protected class Extractor_SemaphoreKeyword_10_0 extends KeywordToken  {
	
	public Extractor_SemaphoreKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getSemaphoreKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// semaphore=[Semaphore|EString]
protected class Extractor_SemaphoreAssignment_10_1 extends AssignmentToken  {
	
	public Extractor_SemaphoreAssignment_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getSemaphoreAssignment_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_SemaphoreKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("semaphore",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("semaphore");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getSemaphoreSemaphoreCrossReference_10_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getSemaphoreSemaphoreCrossReference_10_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")?
protected class Extractor_Group_11 extends GroupToken {
	
	public Extractor_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_RightParenthesisKeyword_11_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "signals"
protected class Extractor_SignalsKeyword_11_0 extends KeywordToken  {
	
	public Extractor_SignalsKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getSignalsKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "("
protected class Extractor_LeftParenthesisKeyword_11_1 extends KeywordToken  {
	
	public Extractor_LeftParenthesisKeyword_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getLeftParenthesisKeyword_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_SignalsKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// signals+=[Signal|EString]
protected class Extractor_SignalsAssignment_11_2 extends AssignmentToken  {
	
	public Extractor_SignalsAssignment_11_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getSignalsAssignment_11_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_LeftParenthesisKeyword_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signals",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signals");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getSignalsSignalCrossReference_11_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getSignalsSignalCrossReference_11_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," signals+=[Signal|EString])*
protected class Extractor_Group_11_3 extends GroupToken {
	
	public Extractor_Group_11_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractorAccess().getGroup_11_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_SignalsAssignment_11_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Extractor_CommaKeyword_11_3_0 extends KeywordToken  {
	
	public Extractor_CommaKeyword_11_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getCommaKeyword_11_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_11_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_SignalsAssignment_11_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// signals+=[Signal|EString]
protected class Extractor_SignalsAssignment_11_3_1 extends AssignmentToken  {
	
	public Extractor_SignalsAssignment_11_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractorAccess().getSignalsAssignment_11_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_CommaKeyword_11_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signals",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signals");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractorAccess().getSignalsSignalCrossReference_11_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractorAccess().getSignalsSignalCrossReference_11_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Extractor_RightParenthesisKeyword_11_4 extends KeywordToken  {
	
	public Extractor_RightParenthesisKeyword_11_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getRightParenthesisKeyword_11_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_11_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_SignalsAssignment_11_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class Extractor_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public Extractor_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractorAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Extractor_Group_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Extractor_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Extractor_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule Extractor ****************/


/************ begin Rule Injector ****************
 *
 * Injector:
 * 
 * 	{Injector} "Injector" name=EString "{" ("carsPerHour" carsPerHour=EInt)? "hasStarts" "(" hasStarts+=[Segment|EString]
 * 
 * 	("," hasStarts+=[Segment|EString])* ")" ("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])*
 * 
 * 	")")? ("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] (","
 * 
 * 	signals+=[Signal|EString])* ")")? "}";
 *
 **/

// {Injector} "Injector" name=EString "{" ("carsPerHour" carsPerHour=EInt)? "hasStarts" "(" hasStarts+=[Segment|EString]
// 
// ("," hasStarts+=[Segment|EString])* ")" ("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])*
// 
// ")")? ("semaphore" semaphore=[Semaphore|EString])? ("signals" "(" signals+=[Signal|EString] (","
// 
// signals+=[Signal|EString])* ")")? "}"
protected class Injector_Group extends GroupToken {
	
	public Injector_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_RightCurlyBracketKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInjectorAccess().getInjectorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Injector}
protected class Injector_InjectorAction_0 extends ActionToken  {

	public Injector_InjectorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getInjectorAccess().getInjectorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Injector"
protected class Injector_InjectorKeyword_1 extends KeywordToken  {
	
	public Injector_InjectorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getInjectorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_InjectorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Injector_NameAssignment_2 extends AssignmentToken  {
	
	public Injector_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_InjectorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInjectorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getInjectorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Injector_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Injector_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("carsPerHour" carsPerHour=EInt)?
protected class Injector_Group_4 extends GroupToken {
	
	public Injector_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_CarsPerHourAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "carsPerHour"
protected class Injector_CarsPerHourKeyword_4_0 extends KeywordToken  {
	
	public Injector_CarsPerHourKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getCarsPerHourKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// carsPerHour=EInt
protected class Injector_CarsPerHourAssignment_4_1 extends AssignmentToken  {
	
	public Injector_CarsPerHourAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getCarsPerHourAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_CarsPerHourKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("carsPerHour",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("carsPerHour");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInjectorAccess().getCarsPerHourEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getInjectorAccess().getCarsPerHourEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "hasStarts"
protected class Injector_HasStartsKeyword_5 extends KeywordToken  {
	
	public Injector_HasStartsKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getHasStartsKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "("
protected class Injector_LeftParenthesisKeyword_6 extends KeywordToken  {
	
	public Injector_LeftParenthesisKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getLeftParenthesisKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_HasStartsKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasStarts+=[Segment|EString]
protected class Injector_HasStartsAssignment_7 extends AssignmentToken  {
	
	public Injector_HasStartsAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getHasStartsAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_LeftParenthesisKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasStarts",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasStarts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getHasStartsSegmentCrossReference_7_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getHasStartsSegmentCrossReference_7_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasStarts+=[Segment|EString])*
protected class Injector_Group_8 extends GroupToken {
	
	public Injector_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_HasStartsAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Injector_CommaKeyword_8_0 extends KeywordToken  {
	
	public Injector_CommaKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getCommaKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_HasStartsAssignment_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasStarts+=[Segment|EString]
protected class Injector_HasStartsAssignment_8_1 extends AssignmentToken  {
	
	public Injector_HasStartsAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getHasStartsAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_CommaKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasStarts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasStarts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getHasStartsSegmentCrossReference_8_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getHasStartsSegmentCrossReference_8_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Injector_RightParenthesisKeyword_9 extends KeywordToken  {
	
	public Injector_RightParenthesisKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getRightParenthesisKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_HasStartsAssignment_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("hasEnds" "(" hasEnds+=[Segment|EString] ("," hasEnds+=[Segment|EString])* ")")?
protected class Injector_Group_10 extends GroupToken {
	
	public Injector_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_RightParenthesisKeyword_10_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hasEnds"
protected class Injector_HasEndsKeyword_10_0 extends KeywordToken  {
	
	public Injector_HasEndsKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getHasEndsKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class Injector_LeftParenthesisKeyword_10_1 extends KeywordToken  {
	
	public Injector_LeftParenthesisKeyword_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getLeftParenthesisKeyword_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_HasEndsKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hasEnds+=[Segment|EString]
protected class Injector_HasEndsAssignment_10_2 extends AssignmentToken  {
	
	public Injector_HasEndsAssignment_10_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getHasEndsAssignment_10_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_LeftParenthesisKeyword_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasEnds",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasEnds");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getHasEndsSegmentCrossReference_10_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getHasEndsSegmentCrossReference_10_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," hasEnds+=[Segment|EString])*
protected class Injector_Group_10_3 extends GroupToken {
	
	public Injector_Group_10_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_10_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_HasEndsAssignment_10_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Injector_CommaKeyword_10_3_0 extends KeywordToken  {
	
	public Injector_CommaKeyword_10_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getCommaKeyword_10_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_10_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_HasEndsAssignment_10_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// hasEnds+=[Segment|EString]
protected class Injector_HasEndsAssignment_10_3_1 extends AssignmentToken  {
	
	public Injector_HasEndsAssignment_10_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getHasEndsAssignment_10_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_CommaKeyword_10_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hasEnds",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hasEnds");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getHasEndsSegmentCrossReference_10_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getHasEndsSegmentCrossReference_10_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Injector_RightParenthesisKeyword_10_4 extends KeywordToken  {
	
	public Injector_RightParenthesisKeyword_10_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getRightParenthesisKeyword_10_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_10_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_HasEndsAssignment_10_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("semaphore" semaphore=[Semaphore|EString])?
protected class Injector_Group_11 extends GroupToken {
	
	public Injector_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_SemaphoreAssignment_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "semaphore"
protected class Injector_SemaphoreKeyword_11_0 extends KeywordToken  {
	
	public Injector_SemaphoreKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getSemaphoreKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// semaphore=[Semaphore|EString]
protected class Injector_SemaphoreAssignment_11_1 extends AssignmentToken  {
	
	public Injector_SemaphoreAssignment_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getSemaphoreAssignment_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_SemaphoreKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("semaphore",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("semaphore");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getSemaphoreSemaphoreCrossReference_11_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getSemaphoreSemaphoreCrossReference_11_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("signals" "(" signals+=[Signal|EString] ("," signals+=[Signal|EString])* ")")?
protected class Injector_Group_12 extends GroupToken {
	
	public Injector_Group_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_RightParenthesisKeyword_12_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "signals"
protected class Injector_SignalsKeyword_12_0 extends KeywordToken  {
	
	public Injector_SignalsKeyword_12_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getSignalsKeyword_12_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_Group_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Injector_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// "("
protected class Injector_LeftParenthesisKeyword_12_1 extends KeywordToken  {
	
	public Injector_LeftParenthesisKeyword_12_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getLeftParenthesisKeyword_12_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_SignalsKeyword_12_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// signals+=[Signal|EString]
protected class Injector_SignalsAssignment_12_2 extends AssignmentToken  {
	
	public Injector_SignalsAssignment_12_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getSignalsAssignment_12_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_LeftParenthesisKeyword_12_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signals",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signals");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getSignalsSignalCrossReference_12_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getSignalsSignalCrossReference_12_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," signals+=[Signal|EString])*
protected class Injector_Group_12_3 extends GroupToken {
	
	public Injector_Group_12_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInjectorAccess().getGroup_12_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_SignalsAssignment_12_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Injector_CommaKeyword_12_3_0 extends KeywordToken  {
	
	public Injector_CommaKeyword_12_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getCommaKeyword_12_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_12_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_SignalsAssignment_12_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// signals+=[Signal|EString]
protected class Injector_SignalsAssignment_12_3_1 extends AssignmentToken  {
	
	public Injector_SignalsAssignment_12_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInjectorAccess().getSignalsAssignment_12_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_CommaKeyword_12_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signals",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signals");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInjectorAccess().getSignalsSignalCrossReference_12_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInjectorAccess().getSignalsSignalCrossReference_12_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ")"
protected class Injector_RightParenthesisKeyword_12_4 extends KeywordToken  {
	
	public Injector_RightParenthesisKeyword_12_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getRightParenthesisKeyword_12_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_12_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_SignalsAssignment_12_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class Injector_RightCurlyBracketKeyword_13 extends KeywordToken  {
	
	public Injector_RightCurlyBracketKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInjectorAccess().getRightCurlyBracketKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Injector_Group_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Injector_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Injector_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Injector_RightParenthesisKeyword_9(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule Injector ****************/





/************ begin Rule Speedlimit ****************
 *
 * Speedlimit:
 * 
 * 	"Speedlimit" name=EString "{" ("Speed" Speed=EInt)? "belongsTo" belongsTo=[Node|EString] "}";
 *
 **/

// "Speedlimit" name=EString "{" ("Speed" Speed=EInt)? "belongsTo" belongsTo=[Node|EString] "}"
protected class Speedlimit_Group extends GroupToken {
	
	public Speedlimit_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpeedlimitRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Speedlimit"
protected class Speedlimit_SpeedlimitKeyword_0 extends KeywordToken  {
	
	public Speedlimit_SpeedlimitKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getSpeedlimitKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class Speedlimit_NameAssignment_1 extends AssignmentToken  {
	
	public Speedlimit_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_SpeedlimitKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpeedlimitAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSpeedlimitAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Speedlimit_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public Speedlimit_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("Speed" Speed=EInt)?
protected class Speedlimit_Group_3 extends GroupToken {
	
	public Speedlimit_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_SpeedAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "Speed"
protected class Speedlimit_SpeedKeyword_3_0 extends KeywordToken  {
	
	public Speedlimit_SpeedKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getSpeedKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Speed=EInt
protected class Speedlimit_SpeedAssignment_3_1 extends AssignmentToken  {
	
	public Speedlimit_SpeedAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getSpeedAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_SpeedKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Speed",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Speed");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpeedlimitAccess().getSpeedEIntParserRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSpeedlimitAccess().getSpeedEIntParserRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// "belongsTo"
protected class Speedlimit_BelongsToKeyword_4 extends KeywordToken  {
	
	public Speedlimit_BelongsToKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getBelongsToKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Speedlimit_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// belongsTo=[Node|EString]
protected class Speedlimit_BelongsToAssignment_5 extends AssignmentToken  {
	
	public Speedlimit_BelongsToAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getBelongsToAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_BelongsToKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("belongsTo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("belongsTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSpeedlimitAccess().getBelongsToNodeCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSpeedlimitAccess().getBelongsToNodeCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class Speedlimit_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public Speedlimit_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpeedlimitAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Speedlimit_BelongsToAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Speedlimit ****************/


/************ begin Rule Stop ****************
 *
 * Stop:
 * 
 * 	"Stop" name=EString "{" "belongsTo" belongsTo=[Node|EString] "}";
 *
 **/

// "Stop" name=EString "{" "belongsTo" belongsTo=[Node|EString] "}"
protected class Stop_Group extends GroupToken {
	
	public Stop_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStopAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStopRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Stop"
protected class Stop_StopKeyword_0 extends KeywordToken  {
	
	public Stop_StopKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStopAccess().getStopKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class Stop_NameAssignment_1 extends AssignmentToken  {
	
	public Stop_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStopAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_StopKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStopAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getStopAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Stop_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public Stop_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStopAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "belongsTo"
protected class Stop_BelongsToKeyword_3 extends KeywordToken  {
	
	public Stop_BelongsToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStopAccess().getBelongsToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// belongsTo=[Node|EString]
protected class Stop_BelongsToAssignment_4 extends AssignmentToken  {
	
	public Stop_BelongsToAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStopAccess().getBelongsToAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_BelongsToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("belongsTo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("belongsTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStopAccess().getBelongsToNodeCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getStopAccess().getBelongsToNodeCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class Stop_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Stop_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStopAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Stop_BelongsToAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Stop ****************/


/************ begin Rule Yield ****************
 *
 * Yield:
 * 
 * 	"Yield" name=EString "{" "belongsTo" belongsTo=[Node|EString] "}";
 *
 **/

// "Yield" name=EString "{" "belongsTo" belongsTo=[Node|EString] "}"
protected class Yield_Group extends GroupToken {
	
	public Yield_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getYieldAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getYieldRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Yield"
protected class Yield_YieldKeyword_0 extends KeywordToken  {
	
	public Yield_YieldKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getYieldAccess().getYieldKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class Yield_NameAssignment_1 extends AssignmentToken  {
	
	public Yield_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getYieldAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_YieldKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getYieldAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getYieldAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Yield_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public Yield_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getYieldAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "belongsTo"
protected class Yield_BelongsToKeyword_3 extends KeywordToken  {
	
	public Yield_BelongsToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getYieldAccess().getBelongsToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// belongsTo=[Node|EString]
protected class Yield_BelongsToAssignment_4 extends AssignmentToken  {
	
	public Yield_BelongsToAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getYieldAccess().getBelongsToAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_BelongsToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("belongsTo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("belongsTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getYieldAccess().getBelongsToNodeCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getYieldAccess().getBelongsToNodeCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class Yield_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Yield_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getYieldAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Yield_BelongsToAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Yield ****************/

}
