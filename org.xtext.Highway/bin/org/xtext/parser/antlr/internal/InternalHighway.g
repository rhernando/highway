/*
* generated by Xtext
*/
grammar InternalHighway;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.HighwayGrammarAccess;

}

@parser::members {

 	private HighwayGrammarAccess grammarAccess;
 	
    public InternalHighwayParser(TokenStream input, HighwayGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Highway";	
   	}
   	
   	@Override
   	protected HighwayGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleHighway
entryRuleHighway returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHighwayRule()); }
	 iv_ruleHighway=ruleHighway 
	 { $current=$iv_ruleHighway.current; } 
	 EOF 
;

// Rule Highway
ruleHighway returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHighwayAccess().getHighwayAction_0(),
            $current);
    }
)	otherlv_1='Highway' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHighwayAccess().getHighwayKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Segments' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHighwayAccess().getSegmentsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitSegmentsSegmentParserRuleCall_3_2_0()); 
	    }
		lv_initSegments_5_0=ruleSegment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initSegments",
        		lv_initSegments_5_0, 
        		"Segment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHighwayAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitSegmentsSegmentParserRuleCall_3_3_1_0()); 
	    }
		lv_initSegments_7_0=ruleSegment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initSegments",
        		lv_initSegments_7_0, 
        		"Segment");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='Nodes' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getHighwayAccess().getNodesKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitNodesNodeParserRuleCall_4_2_0()); 
	    }
		lv_initNodes_11_0=ruleNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initNodes",
        		lv_initNodes_11_0, 
        		"Node");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getHighwayAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitNodesNodeParserRuleCall_4_3_1_0()); 
	    }
		lv_initNodes_13_0=ruleNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initNodes",
        		lv_initNodes_13_0, 
        		"Node");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_15='Cars' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getHighwayAccess().getCarsKeyword_5_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitCarsCarParserRuleCall_5_2_0()); 
	    }
		lv_initCars_17_0=ruleCar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initCars",
        		lv_initCars_17_0, 
        		"Car");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getHighwayAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitCarsCarParserRuleCall_5_3_1_0()); 
	    }
		lv_initCars_19_0=ruleCar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initCars",
        		lv_initCars_19_0, 
        		"Car");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_21='Semaphores' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getHighwayAccess().getSemaphoresKeyword_6_0());
    }
	otherlv_22='{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitSemaphoreSemaphoreParserRuleCall_6_2_0()); 
	    }
		lv_initSemaphore_23_0=ruleSemaphore		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initSemaphore",
        		lv_initSemaphore_23_0, 
        		"Semaphore");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getHighwayAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitSemaphoreSemaphoreParserRuleCall_6_3_1_0()); 
	    }
		lv_initSemaphore_25_0=ruleSemaphore		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initSemaphore",
        		lv_initSemaphore_25_0, 
        		"Semaphore");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_6_4());
    }
)?(	otherlv_27='Signals' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getHighwayAccess().getSignalsKeyword_7_0());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getHighwayAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitSignalSignalParserRuleCall_7_2_0()); 
	    }
		lv_initSignal_29_0=ruleSignal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initSignal",
        		lv_initSignal_29_0, 
        		"Signal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_30=',' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getHighwayAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHighwayAccess().getInitSignalSignalParserRuleCall_7_3_1_0()); 
	    }
		lv_initSignal_31_0=ruleSignal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHighwayRule());
	        }
       		add(
       			$current, 
       			"initSignal",
        		lv_initSignal_31_0, 
        		"Signal");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getHighwayAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	 iv_ruleNode=ruleNode 
	 { $current=$iv_ruleNode.current; } 
	 EOF 
;

// Rule Node
ruleNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNodeAccess().getNode_ImplParserRuleCall_0()); 
    }
    this_Node_Impl_0=ruleNode_Impl
    { 
        $current = $this_Node_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNodeAccess().getExtractorParserRuleCall_1()); 
    }
    this_Extractor_1=ruleExtractor
    { 
        $current = $this_Extractor_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNodeAccess().getInjectorParserRuleCall_2()); 
    }
    this_Injector_2=ruleInjector
    { 
        $current = $this_Injector_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSignal
entryRuleSignal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalRule()); }
	 iv_ruleSignal=ruleSignal 
	 { $current=$iv_ruleSignal.current; } 
	 EOF 
;

// Rule Signal
ruleSignal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSignalAccess().getSignal_ImplParserRuleCall_0()); 
    }
    this_Signal_Impl_0=ruleSignal_Impl
    { 
        $current = $this_Signal_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSignalAccess().getSpeedlimitParserRuleCall_1()); 
    }
    this_Speedlimit_1=ruleSpeedlimit
    { 
        $current = $this_Speedlimit_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSignalAccess().getStopParserRuleCall_2()); 
    }
    this_Stop_2=ruleStop
    { 
        $current = $this_Stop_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSignalAccess().getYieldParserRuleCall_3()); 
    }
    this_Yield_3=ruleYield
    { 
        $current = $this_Yield_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNode_Impl
entryRuleNode_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNode_ImplRule()); }
	 iv_ruleNode_Impl=ruleNode_Impl 
	 { $current=$iv_ruleNode_Impl.current; } 
	 EOF 
;

// Rule Node_Impl
ruleNode_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNode_ImplAccess().getNodeAction_0(),
            $current);
    }
)	otherlv_1='Node' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNode_ImplAccess().getNodeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNode_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNode_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='hasStarts' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNode_ImplAccess().getHasStartsKeyword_4());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNode_ImplAccess().getLeftParenthesisKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getHasStartsSegmentCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNode_ImplAccess().getCommaKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getHasStartsSegmentCrossReference_7_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNode_ImplAccess().getRightParenthesisKeyword_8());
    }
	otherlv_10='hasEnds' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getNode_ImplAccess().getHasEndsKeyword_9());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNode_ImplAccess().getLeftParenthesisKeyword_10());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getHasEndsSegmentCrossReference_11_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getNode_ImplAccess().getCommaKeyword_12_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getHasEndsSegmentCrossReference_12_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getNode_ImplAccess().getRightParenthesisKeyword_13());
    }
(	otherlv_16='semaphore' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getNode_ImplAccess().getSemaphoreKeyword_14_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getSemaphoreSemaphoreCrossReference_14_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_18='signals' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getNode_ImplAccess().getSignalsKeyword_15_0());
    }
	otherlv_19='(' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getNode_ImplAccess().getLeftParenthesisKeyword_15_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getSignalsSignalCrossReference_15_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getNode_ImplAccess().getCommaKeyword_15_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNode_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNode_ImplAccess().getSignalsSignalCrossReference_15_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23=')' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getNode_ImplAccess().getRightParenthesisKeyword_15_4());
    }
)?	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getNode_ImplAccess().getRightCurlyBracketKeyword_16());
    }
)
;





// Entry rule entryRuleCar
entryRuleCar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCarRule()); }
	 iv_ruleCar=ruleCar 
	 { $current=$iv_ruleCar.current; } 
	 EOF 
;

// Rule Car
ruleCar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCarAccess().getCarAction_0(),
            $current);
    }
)	otherlv_1='Car' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCarAccess().getCarKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCarAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCarRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='timeIn' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCarAccess().getTimeInKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCarAccess().getTimeInEDateParserRuleCall_4_1_0()); 
	    }
		lv_timeIn_5_0=ruleEDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCarRule());
	        }
       		set(
       			$current, 
       			"timeIn",
        		lv_timeIn_5_0, 
        		"EDate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='timeOut' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCarAccess().getTimeOutKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCarAccess().getTimeOutEDateParserRuleCall_5_1_0()); 
	    }
		lv_timeOut_7_0=ruleEDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCarRule());
	        }
       		set(
       			$current, 
       			"timeOut",
        		lv_timeOut_7_0, 
        		"EDate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='isInSegment' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCarAccess().getIsInSegmentKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCarRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCarAccess().getIsInSegmentSegmentCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCarAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSegment
entryRuleSegment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegmentRule()); }
	 iv_ruleSegment=ruleSegment 
	 { $current=$iv_ruleSegment.current; } 
	 EOF 
;

// Rule Segment
ruleSegment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSegmentAccess().getSegmentAction_0(),
            $current);
    }
)	otherlv_1='Segment' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSegmentAccess().getSegmentKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegmentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSegmentAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='numLanes' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSegmentAccess().getNumLanesKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getNumLanesEIntParserRuleCall_4_1_0()); 
	    }
		lv_numLanes_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegmentRule());
	        }
       		set(
       			$current, 
       			"numLanes",
        		lv_numLanes_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='length' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSegmentAccess().getLengthKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getLengthEIntParserRuleCall_5_1_0()); 
	    }
		lv_length_7_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegmentRule());
	        }
       		set(
       			$current, 
       			"length",
        		lv_length_7_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='hasCars' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSegmentAccess().getHasCarsKeyword_6_0());
    }
	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSegmentAccess().getLeftParenthesisKeyword_6_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSegmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getHasCarsCarCrossReference_6_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSegmentAccess().getCommaKeyword_6_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSegmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getHasCarsCarCrossReference_6_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSegmentAccess().getRightParenthesisKeyword_6_4());
    }
)?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSegmentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSemaphore
entryRuleSemaphore returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSemaphoreRule()); }
	 iv_ruleSemaphore=ruleSemaphore 
	 { $current=$iv_ruleSemaphore.current; } 
	 EOF 
;

// Rule Semaphore
ruleSemaphore returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSemaphoreAccess().getSemaphoreAction_0(),
            $current);
    }
)	otherlv_1='Semaphore' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSemaphoreAccess().getSemaphoreKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSemaphoreAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSemaphoreRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSemaphoreAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='canGo' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSemaphoreAccess().getCanGoKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSemaphoreAccess().getCanGoEBooleanParserRuleCall_4_1_0()); 
	    }
		lv_canGo_5_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSemaphoreRule());
	        }
       		set(
       			$current, 
       			"canGo",
        		lv_canGo_5_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='secondsRed' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSemaphoreAccess().getSecondsRedKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSemaphoreAccess().getSecondsRedEIntParserRuleCall_5_1_0()); 
	    }
		lv_secondsRed_7_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSemaphoreRule());
	        }
       		set(
       			$current, 
       			"secondsRed",
        		lv_secondsRed_7_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='secondsGreen' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSemaphoreAccess().getSecondsGreenKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSemaphoreAccess().getSecondsGreenEIntParserRuleCall_6_1_0()); 
	    }
		lv_secondsGreen_9_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSemaphoreRule());
	        }
       		set(
       			$current, 
       			"secondsGreen",
        		lv_secondsGreen_9_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='belongsTo' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSemaphoreAccess().getBelongsToKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSemaphoreRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSemaphoreAccess().getBelongsToNodeCrossReference_8_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSemaphoreAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleSignal_Impl
entryRuleSignal_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignal_ImplRule()); }
	 iv_ruleSignal_Impl=ruleSignal_Impl 
	 { $current=$iv_ruleSignal_Impl.current; } 
	 EOF 
;

// Rule Signal_Impl
ruleSignal_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSignal_ImplAccess().getSignalAction_0(),
            $current);
    }
)	otherlv_1='Signal' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignal_ImplAccess().getSignalKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignal_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignal_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSignal_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='belongsTo' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSignal_ImplAccess().getBelongsToKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSignal_ImplRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSignal_ImplAccess().getBelongsToNodeCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSignal_ImplAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleExtractor
entryRuleExtractor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtractorRule()); }
	 iv_ruleExtractor=ruleExtractor 
	 { $current=$iv_ruleExtractor.current; } 
	 EOF 
;

// Rule Extractor
ruleExtractor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExtractorAccess().getExtractorAction_0(),
            $current);
    }
)	otherlv_1='Extractor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtractorAccess().getExtractorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtractorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='hasStarts' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExtractorAccess().getHasStartsKeyword_4_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtractorAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getHasStartsSegmentCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExtractorAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getHasStartsSegmentCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExtractorAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_10='hasEnds' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExtractorAccess().getHasEndsKeyword_5());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExtractorAccess().getLeftParenthesisKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getHasEndsSegmentCrossReference_7_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExtractorAccess().getCommaKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getHasEndsSegmentCrossReference_8_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getExtractorAccess().getRightParenthesisKeyword_9());
    }
(	otherlv_16='semaphore' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getExtractorAccess().getSemaphoreKeyword_10_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getSemaphoreSemaphoreCrossReference_10_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_18='signals' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getExtractorAccess().getSignalsKeyword_11_0());
    }
	otherlv_19='(' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getExtractorAccess().getLeftParenthesisKeyword_11_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getSignalsSignalCrossReference_11_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getExtractorAccess().getCommaKeyword_11_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtractorAccess().getSignalsSignalCrossReference_11_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23=')' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getExtractorAccess().getRightParenthesisKeyword_11_4());
    }
)?	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getExtractorAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleInjector
entryRuleInjector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInjectorRule()); }
	 iv_ruleInjector=ruleInjector 
	 { $current=$iv_ruleInjector.current; } 
	 EOF 
;

// Rule Injector
ruleInjector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInjectorAccess().getInjectorAction_0(),
            $current);
    }
)	otherlv_1='Injector' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInjectorAccess().getInjectorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInjectorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInjectorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='carsPerHour' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInjectorAccess().getCarsPerHourKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getCarsPerHourEIntParserRuleCall_4_1_0()); 
	    }
		lv_carsPerHour_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInjectorRule());
	        }
       		set(
       			$current, 
       			"carsPerHour",
        		lv_carsPerHour_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='hasStarts' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInjectorAccess().getHasStartsKeyword_5());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInjectorAccess().getLeftParenthesisKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getHasStartsSegmentCrossReference_7_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInjectorAccess().getCommaKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getHasStartsSegmentCrossReference_8_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInjectorAccess().getRightParenthesisKeyword_9());
    }
(	otherlv_12='hasEnds' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInjectorAccess().getHasEndsKeyword_10_0());
    }
	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInjectorAccess().getLeftParenthesisKeyword_10_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getHasEndsSegmentCrossReference_10_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInjectorAccess().getCommaKeyword_10_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getHasEndsSegmentCrossReference_10_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInjectorAccess().getRightParenthesisKeyword_10_4());
    }
)?(	otherlv_18='semaphore' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInjectorAccess().getSemaphoreKeyword_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getSemaphoreSemaphoreCrossReference_11_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_20='signals' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getInjectorAccess().getSignalsKeyword_12_0());
    }
	otherlv_21='(' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getInjectorAccess().getLeftParenthesisKeyword_12_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getSignalsSignalCrossReference_12_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getInjectorAccess().getCommaKeyword_12_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInjectorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInjectorAccess().getSignalsSignalCrossReference_12_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getInjectorAccess().getRightParenthesisKeyword_12_4());
    }
)?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getInjectorAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDateRule()); } 
	 iv_ruleEDate=ruleEDate 
	 { $current=$iv_ruleEDate.current.getText(); }  
	 EOF 
;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEDateAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleSpeedlimit
entryRuleSpeedlimit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpeedlimitRule()); }
	 iv_ruleSpeedlimit=ruleSpeedlimit 
	 { $current=$iv_ruleSpeedlimit.current; } 
	 EOF 
;

// Rule Speedlimit
ruleSpeedlimit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Speedlimit' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpeedlimitAccess().getSpeedlimitKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpeedlimitAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpeedlimitRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpeedlimitAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Speed' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpeedlimitAccess().getSpeedKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpeedlimitAccess().getSpeedEIntParserRuleCall_3_1_0()); 
	    }
		lv_Speed_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpeedlimitRule());
	        }
       		set(
       			$current, 
       			"Speed",
        		lv_Speed_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='belongsTo' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpeedlimitAccess().getBelongsToKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpeedlimitRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSpeedlimitAccess().getBelongsToNodeCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpeedlimitAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleStop
entryRuleStop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStopRule()); }
	 iv_ruleStop=ruleStop 
	 { $current=$iv_ruleStop.current; } 
	 EOF 
;

// Rule Stop
ruleStop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Stop' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStopAccess().getStopKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStopAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStopRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStopAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='belongsTo' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStopAccess().getBelongsToKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStopAccess().getBelongsToNodeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStopAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleYield
entryRuleYield returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getYieldRule()); }
	 iv_ruleYield=ruleYield 
	 { $current=$iv_ruleYield.current; } 
	 EOF 
;

// Rule Yield
ruleYield returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Yield' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getYieldAccess().getYieldKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getYieldAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getYieldRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getYieldAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='belongsTo' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getYieldAccess().getBelongsToKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getYieldRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getYieldAccess().getBelongsToNodeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getYieldAccess().getRightCurlyBracketKeyword_5());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


